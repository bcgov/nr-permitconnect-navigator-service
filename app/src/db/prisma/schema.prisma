generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model identity_provider {
  idp       String    @id @db.VarChar(255)
  active    Boolean   @default(true)
  createdBy String?   @default("00000000-0000-0000-0000-000000000000") @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedBy String?   @db.VarChar(255)
  updatedAt DateTime? @db.Timestamptz(6)
  user      user[]
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?
}

model submission {
  submissionId         String    @id @db.Uuid
  assignedToUserId     String?   @db.Uuid
  confirmationId       String?   @db.VarChar(255)
  contactEmail         String?   @db.VarChar(255)
  contactPhoneNumber   String?   @db.VarChar(255)
  contactFirstName     String?   @db.VarChar(255)
  contactLastName      String?   @db.VarChar(255)
  intakeStatus         String?   @db.VarChar(255)
  projectName          String?   @db.VarChar(255)
  queuePriority        String?   @db.VarChar(255)
  singleFamilyUnits    String?   @db.VarChar(255)
  streetAddress        String?   @db.VarChar(255)
  atsClientNumber      String?   @db.VarChar(255)
  addedToATS           Boolean?
  financiallySupported Boolean?
  applicationStatus    String?   @db.VarChar(255)
  relatedPermits       String?   @db.VarChar(255)
  updatedAai           Boolean?
  waitingOn            String?   @db.VarChar(255)
  submittedAt          DateTime? @db.Timestamptz(6)
  submittedBy          String?   @db.VarChar(255)
  bringForwardDate     DateTime? @db.Timestamptz(6)
  notes                String?   @db.VarChar(2047)
  createdBy            String?   @default("00000000-0000-0000-0000-000000000000") @db.VarChar(255)
  createdAt            DateTime? @default(now()) @db.Timestamptz(6)
  updatedBy            String?   @db.VarChar(255)
  updatedAt            DateTime? @db.Timestamptz(6)
  user                 user?     @relation(fields: [assignedToUserId], references: [userId], onDelete: Cascade, map: "submission_assignedtouserid_foreign")
}

model user {
  userId            String             @id @db.Uuid
  identityId        String?            @db.Uuid
  idp               String?            @db.VarChar(255)
  username          String             @db.VarChar(255)
  email             String?            @db.VarChar(255)
  firstName         String?            @db.VarChar(255)
  fullName          String?            @db.VarChar(255)
  lastName          String?            @db.VarChar(255)
  active            Boolean            @default(true)
  createdBy         String?            @default("00000000-0000-0000-0000-000000000000") @db.VarChar(255)
  createdAt         DateTime?          @default(now()) @db.Timestamptz(6)
  updatedBy         String?            @db.VarChar(255)
  updatedAt         DateTime?          @db.Timestamptz(6)
  submission        submission[]
  identity_provider identity_provider? @relation(fields: [idp], references: [idp], onDelete: Cascade, map: "user_idp_foreign")

  @@index([email], map: "user_email_index")
  @@index([identityId], map: "user_identityid_index")
  @@index([username], map: "user_username_index")
}
