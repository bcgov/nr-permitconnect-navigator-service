generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "yars"]
}

model access_request {
  accessRequestId String                     @id @map("access_request_id") @db.Uuid
  userId          String                     @map("user_id") @db.Uuid
  groupId         Int                        @map("group_id")
  status          access_request_status_enum @default(Pending)
  grant           Boolean
  createdBy       String?                    @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt       DateTime?                  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy       String?                    @map("updated_by")
  updatedAt       DateTime?                  @map("updated_at") @db.Timestamptz(6)
  user            user                       @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "access_request_user_id_foreign")
  group           group                      @relation(fields: [groupId], references: [groupId], onDelete: Cascade, map: "public_access_request_group_id_foreign")

  @@schema("public")
}

model activity {
  activityId             String                    @id @map("activity_id")
  initiativeId           String                    @map("initiative_id") @db.Uuid
  createdBy              String?                   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt              DateTime?                 @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy              String?                   @map("updated_by")
  updatedAt              DateTime?                 @map("updated_at") @db.Timestamptz(6)
  isDeleted              Boolean                   @default(false) @map("is_deleted")
  initiative             initiative                @relation(fields: [initiativeId], references: [initiativeId], onDelete: Cascade, map: "activity_initiative_id_foreign")
  activityContact        activity_contact[]
  document               document[]
  draft                  draft[]
  electrificationProject electrification_project[]
  enquiry                enquiry[]
  housingProject         housing_project[]
  noteHistory            note_history[]
  permit                 permit[]

  @@schema("public")
}

model activity_contact {
  activityId String    @map("activity_id")
  contactId  String    @map("contact_id") @db.Uuid
  createdBy  String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  activity   activity  @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "activity_contact_activity_id_foreign")
  contact    contact   @relation(fields: [contactId], references: [contactId], onDelete: Cascade, map: "activity_contact_contact_id_foreign")

  @@id([activityId, contactId])
  @@schema("public")
}

model contact {
  contactId                    String             @id @map("contact_id") @db.Uuid
  userId                       String?            @map("user_id") @db.Uuid
  firstName                    String?            @map("first_name")
  lastName                     String?            @map("last_name")
  phoneNumber                  String?            @map("phone_number")
  email                        String?
  contactPreference            String?            @map("contact_preference")
  contactApplicantRelationship String?            @map("contact_applicant_relationship")
  createdBy                    String?            @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                    DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                    String?            @map("updated_by")
  updatedAt                    DateTime?          @map("updated_at") @db.Timestamptz(6)
  activityContact              activity_contact[]
  user                         user?              @relation(fields: [userId], references: [userId], onDelete: Cascade, map: "contact_user_id_foreign")

  @@schema("public")
}

model document {
  documentId String    @id @map("document_id") @db.Uuid
  activityId String    @map("activity_id")
  filename   String
  mimeType   String    @default("application/octet-stream") @map("mime_type")
  filesize   BigInt
  createdBy  String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  activity   activity  @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "document_activity_id_foreign")

  @@unique([documentId, activityId], map: "document_document_id_activity_id_unique")
  @@schema("public")
}

model draft {
  draftId                            String     @id @map("draft_id") @db.Uuid
  activityId                         String     @map("activity_id")
  draftCode                          String     @map("draft_code")
  data                               Json       @db.Json
  createdBy                          String?    @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                          DateTime?  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                          String?    @map("updated_by")
  updatedAt                          DateTime?  @map("updated_at") @db.Timestamptz(6)
  activity                           activity   @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "draft_activity_id_foreign")
  draftCodeDraftDraftCodeTodraftCode draft_code @relation("draft_draft_codeTodraft_code", fields: [draftCode], references: [draftCode], onDelete: Cascade, map: "draft_draft_code_foreign")

  @@schema("public")
}

model draft_code {
  draftCode                      String    @id @map("draft_code")
  createdBy                      String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                      DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                      String?   @map("updated_by")
  updatedAt                      DateTime? @map("updated_at") @db.Timestamptz(6)
  draftDraftDraftCodeTodraftCode draft[]   @relation("draft_draft_codeTodraft_code")

  @@schema("public")
}

model electrification_project {
  electrificationProjectId           String                                 @id @map("electrification_project_id") @db.Uuid
  activityId                         String                                 @map("activity_id")
  assignedUserId                     String?                                @map("assigned_user_id") @db.Uuid
  submittedAt                        DateTime                               @map("submitted_at") @db.Timestamptz(6)
  intakeStatus                       String?                                @map("intake_status")
  applicationStatus                  String?                                @map("application_status")
  queuePriority                      Int?                                   @map("queue_priority")
  projectName                        String?                                @map("project_name")
  projectDescription                 String?                                @map("project_description")
  companyNameRegistered              String?                                @map("company_name_registered")
  bcHydroNumber                      String?                                @map("bc_hydro_number")
  submissionType                     String?                                @map("submission_type")
  hasEpa                             String?                                @map("has_epa")
  bcEnvironmentAssessNeeded          String?                                @map("bc_environment_assess_needed")
  megawatts                          Decimal?                               @db.Decimal
  locationDescription                String?                                @map("location_description")
  aaiUpdated                         Boolean                                @default(false) @map("aai_updated")
  atsClientId                        Int?                                   @map("ats_client_id")
  astNotes                           String?                                @map("ast_notes")
  projectType                        String?                                @map("project_type")
  projectCategory                    String?                                @map("project_category")
  createdBy                          String?                                @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                          DateTime?                              @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                          String?                                @map("updated_by")
  updatedAt                          DateTime?                              @map("updated_at") @db.Timestamptz(6)
  atsEnquiryId                       Int?                                   @map("ats_enquiry_id")
  addedToAts                         Boolean                                @default(false) @map("added_to_ats")
  activity                           activity                               @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "electrification_project_activity_id_foreign")
  user                               user?                                  @relation(fields: [assignedUserId], references: [userId], onDelete: Cascade, map: "electrification_project_assigned_user_id_foreign")
  electrificationProjectCategoryCode electrification_project_category_code? @relation(fields: [projectCategory], references: [code], map: "electrification_project_project_category_foreign")
  electrificationProjectTypeCode     electrification_project_type_code?     @relation(fields: [projectType], references: [code], map: "electrification_project_project_type_foreign")

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model electrification_project_category_code {
  code                   String                    @id
  display                String                    @unique(map: "electrification_project_category_code_display_unique")
  definition             String
  active                 Boolean                   @default(true)
  createdBy              String?                   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt              DateTime?                 @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy              String?                   @map("updated_by")
  updatedAt              DateTime?                 @map("updated_at") @db.Timestamptz(6)
  electrificationProject electrification_project[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model electrification_project_type_code {
  code                   String                    @id
  display                String                    @unique(map: "electrification_project_type_code_display_unique")
  definition             String
  active                 Boolean                   @default(true)
  createdBy              String?                   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt              DateTime?                 @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy              String?                   @map("updated_by")
  updatedAt              DateTime?                 @map("updated_at") @db.Timestamptz(6)
  electrificationProject electrification_project[]

  @@schema("public")
}

model email_log {
  emailLogId String    @id @map("email_log_id") @db.Uuid
  httpStatus Int?      @map("http_status")
  msgId      String?   @map("msg_id") @db.Uuid
  to         String?
  txId       String?   @map("tx_id") @db.Uuid
  createdBy  String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model enquiry {
  enquiryId          String                        @id @map("enquiry_id") @db.Uuid
  activityId         String                        @map("activity_id")
  assignedUserId     String?                       @map("assigned_user_id") @db.Uuid
  submissionType     String?                       @map("submission_type")
  submittedAt        DateTime                      @map("submitted_at") @db.Timestamptz(6)
  submittedBy        String                        @map("submitted_by")
  relatedActivityId  String?                       @map("related_activity_id")
  enquiryDescription String?                       @map("enquiry_description")
  intakeStatus       String?                       @map("intake_status")
  enquiryStatus      String?                       @map("enquiry_status")
  waitingOn          String?                       @map("waiting_on")
  createdBy          String?                       @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt          DateTime?                     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy          String?                       @map("updated_by")
  updatedAt          DateTime?                     @map("updated_at") @db.Timestamptz(6)
  atsClientId        Int?                          @map("ats_client_id")
  addedToAts         Boolean                       @default(false) @map("added_to_ats")
  submittedMethod    enquiry_submitted_method_enum @default(PCNS) @map("submitted_method")
  atsEnquiryId       Int?                          @map("ats_enquiry_id")
  activity           activity                      @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "enquiry_activity_id_foreign")
  user               user?                         @relation(fields: [assignedUserId], references: [userId], onDelete: Cascade, map: "enquiry_assigned_user_id_foreign")

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model escalation_type_code {
  code        String         @id
  display     String         @unique(map: "escalation_type_code_display_unique")
  definition  String
  active      Boolean        @default(true)
  createdBy   String?        @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt   DateTime?      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy   String?        @map("updated_by")
  updatedAt   DateTime?      @map("updated_at") @db.Timestamptz(6)
  noteHistory note_history[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model housing_project {
  housingProjectId                String    @id(map: "submission_pkey") @map("housing_project_id") @db.Uuid
  activityId                      String    @map("activity_id")
  assignedUserId                  String?   @map("assigned_user_id") @db.Uuid
  submittedAt                     DateTime  @map("submitted_at") @db.Timestamptz(6)
  submittedBy                     String    @map("submitted_by")
  locationPids                    String?   @map("location_pids")
  companyNameRegistered           String?   @map("company_name_registered")
  projectName                     String?   @map("project_name")
  singleFamilyUnits               String?   @map("single_family_units")
  streetAddress                   String?   @map("street_address")
  latitude                        Decimal?  @db.Decimal(8, 6)
  longitude                       Decimal?  @db.Decimal(9, 6)
  queuePriority                   Int?      @map("queue_priority")
  relatedPermits                  String?   @map("related_permits")
  astNotes                        String?   @map("ast_notes")
  astUpdated                      Boolean   @default(false) @map("ast_updated")
  addedToAts                      Boolean   @default(false) @map("added_to_ats")
  atsClientId                     Int?      @map("ats_client_id")
  ltsaCompleted                   Boolean   @default(false) @map("ltsa_completed")
  bcOnlineCompleted               Boolean   @default(false) @map("bc_online_completed")
  naturalDisaster                 Boolean   @default(false) @map("natural_disaster")
  financiallySupported            Boolean   @default(false) @map("financially_supported")
  financiallySupportedBc          String?   @map("financially_supported_bc")
  financiallySupportedIndigenous  String?   @map("financially_supported_indigenous")
  financiallySupportedNonProfit   String?   @map("financially_supported_non_profit")
  financiallySupportedHousingCoop String?   @map("financially_supported_housing_coop")
  aaiUpdated                      Boolean   @default(false) @map("aai_updated")
  waitingOn                       String?   @map("waiting_on")
  intakeStatus                    String?   @map("intake_status")
  applicationStatus               String?   @map("application_status")
  createdBy                       String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                       DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                       String?   @map("updated_by")
  updatedAt                       DateTime? @map("updated_at") @db.Timestamptz(6)
  hasRentalUnits                  String?   @map("has_rental_units")
  projectDescription              String?   @map("project_description")
  projectApplicantType            String?   @map("project_applicant_type")
  isDevelopedInBc                 String?   @map("is_developed_in_bc")
  multiFamilyUnits                String?   @map("multi_family_units")
  otherUnits                      String?   @map("other_units")
  otherUnitsDescription           String?   @map("other_units_description")
  rentalUnits                     String?   @map("rental_units")
  projectLocation                 String?   @map("project_location")
  projectLocationDescription      String?   @map("project_location_description")
  locality                        String?
  province                        String?
  hasAppliedProvincialPermits     String?   @map("has_applied_provincial_permits")
  checkProvincialPermits          String?   @map("check_provincial_permits")
  indigenousDescription           String?   @map("indigenous_description")
  nonProfitDescription            String?   @map("non_profit_description")
  housingCoopDescription          String?   @map("housing_coop_description")
  submissionType                  String?   @map("submission_type")
  consentToFeedback               Boolean   @default(false) @map("consent_to_feedback")
  geoJson                         Json?     @map("geo_json") @db.Json
  geomarkUrl                      String?   @map("geomark_url")
  atsEnquiryId                    Int?      @map("ats_enquiry_id")
  activity                        activity  @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "submission_activity_id_foreign")
  user                            user?     @relation(fields: [assignedUserId], references: [userId], onDelete: Cascade, map: "submission_assigned_user_id_foreign")

  @@schema("public")
}

model identity_provider {
  idp       String    @id
  active    Boolean   @default(true)
  createdBy String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  user      user[]

  @@schema("public")
}

model initiative {
  initiativeId             String                        @id @map("initiative_id") @db.Uuid
  code                     String
  label                    String
  createdBy                String?                       @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                DateTime?                     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                String?                       @map("updated_by")
  updatedAt                DateTime?                     @map("updated_at") @db.Timestamptz(6)
  activity                 activity[]
  permitTypeInitiativeXref permit_type_initiative_xref[]
  group                    group[]

  @@schema("public")
}

model knex_migrations {
  id            Int       @id @default(autoincrement())
  name          String?   @db.VarChar(255)
  batch         Int?
  migrationTime DateTime? @map("migration_time") @db.Timestamptz(6)

  @@schema("public")
}

model knex_migrations_lock {
  index    Int  @id @default(autoincrement())
  isLocked Int? @map("is_locked")

  @@schema("public")
}

model note {
  noteId        String       @id @map("note_id") @db.Uuid
  noteHistoryId String       @map("note_history_id") @db.Uuid
  note          String       @default("")
  createdBy     String?      @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt     DateTime?    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy     String?      @map("updated_by")
  updatedAt     DateTime?    @map("updated_at") @db.Timestamptz(6)
  noteHistory   note_history @relation(fields: [noteHistoryId], references: [noteHistoryId], onDelete: Cascade, map: "note_note_history_id_foreign")

  @@schema("public")
}

model note_history {
  noteHistoryId        String                @id @map("note_history_id") @db.Uuid
  activityId           String                @map("activity_id")
  type                 String                @default("")
  title                String                @default("")
  createdBy            String?               @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt            DateTime?             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy            String?               @map("updated_by")
  updatedAt            DateTime?             @map("updated_at") @db.Timestamptz(6)
  bringForwardDate     DateTime?             @map("bring_forward_date") @db.Timestamptz(6)
  bringForwardState    String?               @map("bring_forward_state")
  isDeleted            Boolean               @default(false) @map("is_deleted")
  shownToProponent     Boolean               @default(false) @map("shown_to_proponent")
  escalateToSupervisor Boolean               @default(false) @map("escalate_to_supervisor")
  escalateToDirector   Boolean               @default(false) @map("escalate_to_director")
  escalationType       String?               @map("escalation_type")
  note                 note[]
  activity             activity              @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "note_activity_id_foreign")
  escalationTypeCode   escalation_type_code? @relation(fields: [escalationType], references: [code], map: "note_history_escalation_type_foreign")

  @@schema("public")
}

model permit {
  permitId           String            @id @map("permit_id") @db.Uuid
  permitTypeId       Int               @map("permit_type_id")
  activityId         String            @map("activity_id")
  issuedPermitId     String?           @map("issued_permit_id")
  authStatus         String?           @map("auth_status")
  needed             String?
  status             String?
  submittedDate      DateTime?         @map("submitted_date") @db.Timestamptz(6)
  adjudicationDate   DateTime?         @map("adjudication_date") @db.Timestamptz(6)
  createdBy          String?           @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt          DateTime?         @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy          String?           @map("updated_by")
  updatedAt          DateTime?         @map("updated_at") @db.Timestamptz(6)
  statusLastVerified DateTime?         @map("status_last_verified") @db.Timestamptz(6)
  activity           activity          @relation(fields: [activityId], references: [activityId], onDelete: Cascade, map: "permit_activity_id_foreign")
  permitType         permit_type       @relation(fields: [permitTypeId], references: [permitTypeId], onDelete: Cascade, map: "permit_permit_type_id_foreign")
  permitNote         permit_note[]
  permitTracking     permit_tracking[]

  @@unique([permitId, permitTypeId, activityId], map: "permit_permit_id_permit_type_id_activity_id_unique")
  @@schema("public")
}

model permit_note {
  permitNoteId String    @id @map("permit_note_id") @db.Uuid
  permitId     String    @map("permit_id") @db.Uuid
  note         String    @default("")
  isDeleted    Boolean   @default(false) @map("is_deleted")
  createdBy    String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy    String?   @map("updated_by")
  updatedAt    DateTime? @map("updated_at") @db.Timestamptz(6)
  permit       permit    @relation(fields: [permitId], references: [permitId], onDelete: Cascade, map: "permit_note_permit_id_foreign")

  @@schema("public")
}

model permit_tracking {
  permitTrackingId   Int                 @id @default(autoincrement()) @map("permit_tracking_id")
  permitId           String              @map("permit_id") @db.Uuid
  trackingId         String?             @map("tracking_id")
  sourceSystemKindId Int?                @map("source_system_kind_id")
  shownToProponent   Boolean             @default(false) @map("shown_to_proponent")
  createdBy          String?             @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt          DateTime?           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy          String?             @map("updated_by")
  updatedAt          DateTime?           @map("updated_at") @db.Timestamptz(6)
  permit             permit              @relation(fields: [permitId], references: [permitId], onDelete: Cascade, map: "permit_tracking_permit_id_foreign")
  sourceSystemKind   source_system_kind? @relation(fields: [sourceSystemKindId], references: [sourceSystemKindId], onDelete: Cascade, map: "permit_tracking_source_system_kind_id_foreign")

  @@schema("public")
}

model permit_type {
  permitTypeId             Int                           @id @default(autoincrement()) @map("permit_type_id")
  agency                   String
  division                 String?
  branch                   String?
  businessDomain           String                        @map("business_domain")
  type                     String
  family                   String?
  name                     String
  nameSubtype              String?                       @map("name_subtype")
  acronym                  String?
  trackedInAts             Boolean                       @default(false) @map("tracked_in_ats")
  createdBy                String?                       @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt                DateTime?                     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy                String?                       @map("updated_by")
  updatedAt                DateTime?                     @map("updated_at") @db.Timestamptz(6)
  sourceSystem             String?                       @map("source_system")
  infoUrl                  String?                       @map("info_url")
  permit                   permit[]
  sourceSystemCode         source_system_code?           @relation(fields: [sourceSystem], references: [code], onDelete: Cascade, map: "permit_type_source_system_foreign")
  permitTypeInitiativeXref permit_type_initiative_xref[]

  @@unique([agency, division, branch, name], map: "permit_type_agency_division_branch_name_unique")
  @@schema("public")
}

model permit_type_initiative_xref {
  permitTypeId Int         @map("permit_type_id")
  initiativeId String      @map("initiative_id") @db.Uuid
  createdBy    String?     @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt    DateTime?   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy    String?     @map("updated_by")
  updatedAt    DateTime?   @map("updated_at") @db.Timestamptz(6)
  initiative   initiative  @relation(fields: [initiativeId], references: [initiativeId], onDelete: Cascade, map: "permit_type_initiative_xref_initiative_id_foreign")
  permitType   permit_type @relation(fields: [permitTypeId], references: [permitTypeId], onDelete: Cascade, map: "permit_type_initiative_xref_permit_type_id_foreign")

  @@id([permitTypeId, initiativeId])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model source_system_code {
  code             String               @id
  display          String               @unique(map: "source_system_code_display_unique")
  definition       String
  active           Boolean              @default(true)
  createdBy        String?              @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt        DateTime?            @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy        String?              @map("updated_by")
  updatedAt        DateTime?            @map("updated_at") @db.Timestamptz(6)
  permitType       permit_type[]
  sourceSystemKind source_system_kind[]

  @@schema("public")
}

model source_system_kind {
  sourceSystemKindId Int                @id @default(autoincrement()) @map("source_system_kind_id")
  kind               String?
  description        String?
  sourceSystem       String             @map("source_system")
  createdBy          String?            @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt          DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy          String?            @map("updated_by")
  updatedAt          DateTime?          @map("updated_at") @db.Timestamptz(6)
  permitTracking     permit_tracking[]
  sourceSystemCode   source_system_code @relation(fields: [sourceSystem], references: [code], onDelete: Cascade, map: "source_system_kind_source_system_foreign")

  @@schema("public")
}

model user {
  userId                 String                    @id @map("user_id") @db.Uuid
  idp                    String?
  sub                    String                    @unique(map: "user_sub_unique")
  email                  String?
  firstName              String?                   @map("first_name")
  fullName               String?                   @map("full_name")
  lastName               String?                   @map("last_name")
  active                 Boolean                   @default(true)
  createdBy              String?                   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt              DateTime?                 @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy              String?                   @map("updated_by")
  updatedAt              DateTime?                 @map("updated_at") @db.Timestamptz(6)
  bceidBusinessName      String?                   @map("bceid_business_name")
  accessRequest          access_request[]
  contact                contact[]
  electrificationProject electrification_project[]
  enquiry                enquiry[]
  housingProject         housing_project[]
  identityProvider       identity_provider?        @relation(fields: [idp], references: [idp], onDelete: Cascade, map: "user_idp_foreign")

  @@index([email], map: "user_email_index")
  @@index([sub], map: "user_sub_index")
  @@index([sub], map: "user_username_index")
  @@schema("public")
}

model action {
  actionId  Int       @id @default(autoincrement()) @map("action_id")
  name      String    @unique(map: "action_name_unique")
  createdBy String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  policy    policy[]

  @@schema("yars")
}

model attribute {
  attributeId     Int                @id @default(autoincrement()) @map("attribute_id")
  name            String             @unique(map: "attribute_name_unique")
  description     String?
  createdBy       String?            @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt       DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy       String?            @map("updated_by")
  updatedAt       DateTime?          @map("updated_at") @db.Timestamptz(6)
  attributeGroup  attribute_group[]
  policyAttribute policy_attribute[]

  @@schema("yars")
}

model attribute_group {
  attributeId Int       @map("attribute_id")
  groupId     Int       @map("group_id")
  createdBy   String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy   String?   @map("updated_by")
  updatedAt   DateTime? @map("updated_at") @db.Timestamptz(6)
  attribute   attribute @relation(fields: [attributeId], references: [attributeId], onDelete: Cascade, map: "attribute_group_attribute_id_foreign")
  group       group     @relation(fields: [groupId], references: [groupId], onDelete: Cascade, map: "attribute_group_group_id_foreign")

  @@id([attributeId, groupId])
  @@schema("yars")
}

model group {
  groupId        Int               @id @default(autoincrement()) @map("group_id")
  initiativeId   String            @map("initiative_id") @db.Uuid
  name           String
  label          String
  createdBy      String?           @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt      DateTime?         @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy      String?           @map("updated_by")
  updatedAt      DateTime?         @map("updated_at") @db.Timestamptz(6)
  accessRequest  access_request[]
  attributeGroup attribute_group[]
  initiative     initiative        @relation(fields: [initiativeId], references: [initiativeId], onDelete: Cascade, map: "group_initiative_id_foreign")
  groupRole      group_role[]
  subjectGroup   subject_group[]

  @@unique([initiativeId, name], map: "group_initiative_id_name_unique")
  @@schema("yars")
}

model group_role {
  groupId   Int       @map("group_id")
  roleId    Int       @map("role_id")
  createdBy String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  group     group     @relation(fields: [groupId], references: [groupId], onDelete: Cascade, map: "group_role_group_id_foreign")
  role      role      @relation(fields: [roleId], references: [roleId], onDelete: Cascade, map: "group_role_role_id_foreign")

  @@id([groupId, roleId])
  @@schema("yars")
}

model policy {
  policyId        Int                @id @default(autoincrement()) @map("policy_id")
  resourceId      Int                @map("resource_id")
  actionId        Int                @map("action_id")
  createdBy       String?            @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt       DateTime?          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy       String?            @map("updated_by")
  updatedAt       DateTime?          @map("updated_at") @db.Timestamptz(6)
  action          action             @relation(fields: [actionId], references: [actionId], onDelete: Cascade, map: "policy_action_id_foreign")
  resource        resource           @relation(fields: [resourceId], references: [resourceId], onDelete: Cascade, map: "policy_resource_id_foreign")
  policyAttribute policy_attribute[]
  rolePolicy      role_policy[]

  @@unique([resourceId, actionId], map: "policy_resource_id_action_id_unique")
  @@schema("yars")
}

model policy_attribute {
  policyId    Int       @map("policy_id")
  attributeId Int       @map("attribute_id")
  createdBy   String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy   String?   @map("updated_by")
  updatedAt   DateTime? @map("updated_at") @db.Timestamptz(6)
  attribute   attribute @relation(fields: [attributeId], references: [attributeId], onDelete: Cascade, map: "policy_attribute_attribute_id_foreign")
  policy      policy    @relation(fields: [policyId], references: [policyId], onDelete: Cascade, map: "policy_attribute_policy_id_foreign")

  @@id([policyId, attributeId])
  @@schema("yars")
}

model resource {
  resourceId Int       @id @default(autoincrement()) @map("resource_id")
  name       String    @unique(map: "resource_name_unique")
  createdBy  String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy  String?   @map("updated_by")
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  policy     policy[]

  @@schema("yars")
}

model role {
  roleId         Int           @id @default(autoincrement()) @map("role_id")
  name           String        @unique(map: "role_name_unique")
  description    String?
  recordSecurity Boolean       @default(false) @map("record_security")
  createdBy      String?       @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt      DateTime?     @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy      String?       @map("updated_by")
  updatedAt      DateTime?     @map("updated_at") @db.Timestamptz(6)
  groupRole      group_role[]
  rolePolicy     role_policy[]

  @@schema("yars")
}

model role_policy {
  roleId    Int       @map("role_id")
  policyId  Int       @map("policy_id")
  createdBy String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  policy    policy    @relation(fields: [policyId], references: [policyId], onDelete: Cascade, map: "role_policy_policy_id_foreign")
  role      role      @relation(fields: [roleId], references: [roleId], onDelete: Cascade, map: "role_policy_role_id_foreign")

  @@id([roleId, policyId])
  @@schema("yars")
}

model subject_group {
  sub       String
  groupId   Int       @map("group_id")
  createdBy String?   @default("00000000-0000-0000-0000-000000000000") @map("created_by")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedBy String?   @map("updated_by")
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  group     group     @relation(fields: [groupId], references: [groupId], onDelete: Cascade, map: "subject_group_group_id_foreign")

  @@id([sub, groupId])
  @@schema("yars")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view group_role_policy_vw {
  rowNumber      BigInt  @unique @map("row_number")
  groupId        Int?    @map("group_id")
  initiativeCode String? @map("initiative_code")
  groupName      String? @map("group_name")
  roleName       String? @map("role_name")
  policyId       Int?    @map("policy_id")
  resourceName   String? @map("resource_name")
  actionName     String? @map("action_name")

  @@schema("yars")
}

enum access_request_status_enum {
  Approved
  Pending
  Rejected

  @@schema("public")
}

enum enquiry_submitted_method_enum {
  Email
  Phone
  PCNS

  @@schema("public")
}
