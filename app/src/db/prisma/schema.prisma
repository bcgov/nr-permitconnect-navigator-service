generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?
}

model document {
  documentId   String     @id @db.Uuid
  submissionId String     @db.Uuid
  filename     String
  mimeType     String     @default("application/octet-stream")
  filesize     BigInt
  createdBy    String?    @default("00000000-0000-0000-0000-000000000000")
  createdAt    DateTime?  @default(now()) @db.Timestamptz(6)
  updatedBy    String?
  updatedAt    DateTime?  @db.Timestamptz(6)
  submission   submission @relation(fields: [submissionId], references: [submissionId], onDelete: Cascade, map: "document_submissionid_foreign")

  @@unique([documentId, submissionId], map: "document_documentid_submissionid_unique")
}

model identity_provider {
  idp       String    @id
  active    Boolean   @default(true)
  createdBy String?   @default("00000000-0000-0000-0000-000000000000")
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedBy String?
  updatedAt DateTime? @db.Timestamptz(6)
  user      user[]
}

model note {
  note_id       String     @id @unique(map: "note_note_id_unique") @db.Uuid
  submissionId  String     @db.Uuid
  category_type String?
  note_type     String?
  note          String?
  createdBy     String?    @default("00000000-0000-0000-0000-000000000000")
  createdAt     DateTime?  @default(now()) @db.Timestamptz(6)
  updatedBy     String?
  updatedAt     DateTime?  @db.Timestamptz(6)
  submission    submission @relation(fields: [submissionId], references: [submissionId], onDelete: Cascade, map: "note_submissionid_foreign")
}

model permit {
  permitId         String      @id @db.Uuid
  permitTypeId     Int
  submissionId     String      @db.Uuid
  issuedPermitId   String?
  trackingId       String?
  authStatus       String?
  needed           String?
  status           String?
  submittedDate    DateTime?   @db.Timestamptz(6)
  adjudicationDate DateTime?   @db.Timestamptz(6)
  createdBy        String?     @default("00000000-0000-0000-0000-000000000000")
  createdAt        DateTime?   @default(now()) @db.Timestamptz(6)
  updatedBy        String?
  updatedAt        DateTime?   @db.Timestamptz(6)
  permit_type      permit_type @relation(fields: [permitTypeId], references: [permitTypeId], onDelete: Cascade, map: "permit_permittypeid_foreign")
  submission       submission  @relation(fields: [submissionId], references: [submissionId], onDelete: Cascade, map: "permit_submissionid_foreign")

  @@unique([permitId, permitTypeId, submissionId], map: "permit_permitid_permittypeid_submissionid_unique")
}

model permit_type {
  permitTypeId        Int       @id @default(autoincrement())
  agency              String
  division            String?
  branch              String?
  businessDomain      String
  type                String
  family              String?
  name                String
  nameSubtype         String?
  acronym             String?
  trackedInATS        Boolean?
  sourceSystem        String?
  sourceSystemAcronym String
  createdBy           String?   @default("00000000-0000-0000-0000-000000000000")
  createdAt           DateTime? @default(now()) @db.Timestamptz(6)
  updatedBy           String?
  updatedAt           DateTime? @db.Timestamptz(6)
  permit              permit[]
}

model submission {
  submissionId                    String     @id @db.Uuid
  assignedToUserId                String?    @db.Uuid
  confirmationId                  String
  submittedAt                     DateTime   @db.Timestamptz(6)
  submittedBy                     String
  locationPIDs                    String?
  companyNameRegistered           String?
  contactName                     String?
  contactPhoneNumber              String?
  contactEmail                    String?
  projectName                     String?
  singleFamilyUnits               String?
  streetAddress                   String?
  latitude                        Int?
  longitude                       Int?
  queuePriority                   Int?
  relatedPermits                  String?
  astNotes                        String?
  astUpdated                      Boolean?
  addedToATS                      Boolean?
  atsClientNumber                 String?
  ltsaCompleted                   Boolean?
  bcOnlineCompleted               Boolean?
  naturalDisaster                 Boolean?
  financiallySupported            Boolean?
  financiallySupportedBC          Boolean?
  financiallySupportedIndigenous  Boolean?
  financiallySupportedNonProfit   Boolean?
  financiallySupportedHousingCoop Boolean?
  aaiUpdated                      Boolean?
  waitingOn                       String?
  bringForwardDate                DateTime?  @db.Timestamptz(6)
  notes                           String?
  intakeStatus                    String?
  applicationStatus               String?
  guidance                        Boolean    @default(false)
  statusRequest                   Boolean    @default(false)
  inquiry                         Boolean    @default(false)
  emergencyAssist                 Boolean    @default(false)
  inapplicable                    Boolean    @default(false)
  createdBy                       String?    @default("00000000-0000-0000-0000-000000000000")
  createdAt                       DateTime?  @default(now()) @db.Timestamptz(6)
  updatedBy                       String?
  updatedAt                       DateTime?  @db.Timestamptz(6)
  document                        document[]
  note                            note[]
  permit                          permit[]
  user                            user?      @relation(fields: [assignedToUserId], references: [userId], onDelete: Cascade, map: "submission_assignedtouserid_foreign")
}

model user {
  userId            String             @id @db.Uuid
  identityId        String?            @db.Uuid
  idp               String?
  username          String
  email             String?
  firstName         String?
  fullName          String?
  lastName          String?
  active            Boolean            @default(true)
  createdBy         String?            @default("00000000-0000-0000-0000-000000000000")
  createdAt         DateTime?          @default(now()) @db.Timestamptz(6)
  updatedBy         String?
  updatedAt         DateTime?          @db.Timestamptz(6)
  submission        submission[]
  identity_provider identity_provider? @relation(fields: [idp], references: [idp], onDelete: Cascade, map: "user_idp_foreign")

  @@index([email], map: "user_email_index")
  @@index([identityId], map: "user_identityid_index")
  @@index([username], map: "user_username_index")
}
