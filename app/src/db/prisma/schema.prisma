generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "yars"]
}

model access_request {
  access_request_id String                     @id @db.Uuid
  user_id           String                     @db.Uuid
  group             String?
  status            access_request_status_enum @default(Pending)
  grant             Boolean
  created_by        String?                    @default("00000000-0000-0000-0000-000000000000")
  created_at        DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_by        String?
  updated_at        DateTime?                  @db.Timestamptz(6)
  user              user                       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "access_request_user_id_foreign")

  @@schema("public")
}

model activity {
  activity_id      String             @id
  initiative_id    String             @db.Uuid
  created_by       String?            @default("00000000-0000-0000-0000-000000000000")
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by       String?
  updated_at       DateTime?          @db.Timestamptz(6)
  is_deleted       Boolean            @default(false)
  initiative       initiative         @relation(fields: [initiative_id], references: [initiative_id], onDelete: Cascade, map: "activity_initiative_id_foreign")
  activity_contact activity_contact[]
  document         document[]
  draft            draft[]
  enquiry          enquiry[]
  note             note[]
  permit           permit[]
  submission       submission[]

  @@schema("public")
}

model activity_contact {
  activity_id String
  contact_id  String    @db.Uuid
  created_by  String?   @default("00000000-0000-0000-0000-000000000000")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_by  String?
  updated_at  DateTime? @db.Timestamptz(6)
  activity    activity  @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "activity_contact_activity_id_foreign")
  contact     contact   @relation(fields: [contact_id], references: [contact_id], onDelete: Cascade, map: "activity_contact_contact_id_foreign")

  @@id([activity_id, contact_id])
  @@schema("public")
}

model contact {
  contact_id                     String             @id @db.Uuid
  user_id                        String?            @db.Uuid
  first_name                     String?
  last_name                      String?
  phone_number                   String?
  email                          String?
  contact_preference             String?
  contact_applicant_relationship String?
  created_by                     String?            @default("00000000-0000-0000-0000-000000000000")
  created_at                     DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by                     String?
  updated_at                     DateTime?          @db.Timestamptz(6)
  activity_contact               activity_contact[]
  user                           user?              @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "contact_user_id_foreign")

  @@schema("public")
}

model document {
  document_id String    @id @db.Uuid
  activity_id String
  filename    String
  mime_type   String    @default("application/octet-stream")
  filesize    BigInt
  created_by  String?   @default("00000000-0000-0000-0000-000000000000")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_by  String?
  updated_at  DateTime? @db.Timestamptz(6)
  activity    activity  @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "document_activity_id_foreign")

  @@unique([document_id, activity_id], map: "document_document_id_activity_id_unique")
  @@schema("public")
}

model enquiry {
  enquiry_id          String    @id @db.Uuid
  activity_id         String
  assigned_user_id    String?   @db.Uuid
  enquiry_type        String?
  submitted_at        DateTime  @db.Timestamptz(6)
  submitted_by        String
  related_activity_id String?
  enquiry_description String?
  intake_status       String?
  enquiry_status      String?
  waiting_on          String?
  created_by          String?   @default("00000000-0000-0000-0000-000000000000")
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_by          String?
  updated_at          DateTime? @db.Timestamptz(6)
  ats_client_id       Int?
  added_to_ats        Boolean   @default(false)
  activity            activity  @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "enquiry_activity_id_foreign")
  user                user?     @relation(fields: [assigned_user_id], references: [user_id], onDelete: Cascade, map: "enquiry_assigned_user_id_foreign")

  @@schema("public")
}

model identity_provider {
  idp        String    @id
  active     Boolean   @default(true)
  created_by String?   @default("00000000-0000-0000-0000-000000000000")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  updated_at DateTime? @db.Timestamptz(6)
  user       user[]

  @@schema("public")
}

model initiative {
  initiative_id String     @id @db.Uuid
  code          String
  label         String
  created_by    String?    @default("00000000-0000-0000-0000-000000000000")
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  updated_by    String?
  updated_at    DateTime?  @db.Timestamptz(6)
  activity      activity[]
  group         group[]

  @@schema("public")
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)

  @@schema("public")
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?

  @@schema("public")
}

model note {
  note_id             String    @id @db.Uuid
  activity_id         String
  note                String    @default("")
  note_type           String    @default("")
  title               String    @default("")
  created_by          String?   @default("00000000-0000-0000-0000-000000000000")
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_by          String?
  updated_at          DateTime? @db.Timestamptz(6)
  bring_forward_date  DateTime? @db.Timestamptz(6)
  bring_forward_state String?
  is_deleted          Boolean   @default(false)
  activity            activity  @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "note_activity_id_foreign")

  @@schema("public")
}

model permit {
  permit_id            String        @id @db.Uuid
  permit_type_id       Int
  activity_id          String
  issued_permit_id     String?
  tracking_id          String?
  auth_status          String?
  needed               String?
  status               String?
  submitted_date       DateTime?     @db.Timestamptz(6)
  adjudication_date    DateTime?     @db.Timestamptz(6)
  created_by           String?       @default("00000000-0000-0000-0000-000000000000")
  created_at           DateTime?     @default(now()) @db.Timestamptz(6)
  updated_by           String?
  updated_at           DateTime?     @db.Timestamptz(6)
  status_last_verified DateTime?     @db.Timestamptz(6)
  activity             activity      @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "permit_activity_id_foreign")
  permit_type          permit_type   @relation(fields: [permit_type_id], references: [permit_type_id], onDelete: Cascade, map: "permit_permit_type_id_foreign")
  permit_note          permit_note[]

  @@unique([permit_id, permit_type_id, activity_id], map: "permit_permit_id_permit_type_id_activity_id_unique")
  @@schema("public")
}

model permit_note {
  permit_note_id String    @id @db.Uuid
  permit_id      String    @db.Uuid
  note           String    @default("")
  is_deleted     Boolean   @default(false)
  created_by     String?   @default("00000000-0000-0000-0000-000000000000")
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_by     String?
  updated_at     DateTime? @db.Timestamptz(6)
  permit         permit    @relation(fields: [permit_id], references: [permit_id], onDelete: Cascade, map: "permit_note_permit_id_foreign")

  @@schema("public")
}

model permit_type {
  permit_type_id        Int       @id @default(autoincrement())
  agency                String
  division              String?
  branch                String?
  business_domain       String
  type                  String
  family                String?
  name                  String
  name_subtype          String?
  acronym               String?
  tracked_in_ats        Boolean   @default(false)
  source_system         String?
  source_system_acronym String
  created_by            String?   @default("00000000-0000-0000-0000-000000000000")
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_by            String?
  updated_at            DateTime? @db.Timestamptz(6)
  permit                permit[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model submission {
  submission_id                      String    @id @db.Uuid
  activity_id                        String
  assigned_user_id                   String?   @db.Uuid
  submitted_at                       DateTime  @db.Timestamptz(6)
  submitted_by                       String
  location_pids                      String?
  company_name_registered            String?
  project_name                       String?
  single_family_units                String?
  street_address                     String?
  latitude                           Decimal?  @db.Decimal(8, 6)
  longitude                          Decimal?  @db.Decimal(9, 6)
  queue_priority                     Int?
  related_permits                    String?
  ast_notes                          String?
  ast_updated                        Boolean   @default(false)
  added_to_ats                       Boolean   @default(false)
  ats_client_id                      Int?
  ltsa_completed                     Boolean   @default(false)
  bc_online_completed                Boolean   @default(false)
  natural_disaster                   Boolean   @default(false)
  financially_supported              Boolean   @default(false)
  financially_supported_bc           String?
  financially_supported_indigenous   String?
  financially_supported_non_profit   String?
  financially_supported_housing_coop String?
  aai_updated                        Boolean   @default(false)
  waiting_on                         String?
  intake_status                      String?
  application_status                 String?
  created_by                         String?   @default("00000000-0000-0000-0000-000000000000")
  created_at                         DateTime? @default(now()) @db.Timestamptz(6)
  updated_by                         String?
  updated_at                         DateTime? @db.Timestamptz(6)
  has_rental_units                   String?
  project_description                String?
  project_applicant_type             String?
  is_developed_in_bc                 String?
  multi_family_units                 String?
  other_units                        String?
  other_units_description            String?
  rental_units                       String?
  project_location                   String?
  project_location_description       String?
  locality                           String?
  province                           String?
  has_applied_provincial_permits     String?
  check_provincial_permits           String?
  indigenous_description             String?
  non_profit_description             String?
  housing_coop_description           String?
  submission_type                    String?
  consent_to_feedback                Boolean   @default(false)
  geo_json                           Json?     @db.Json
  activity                           activity  @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "submission_activity_id_foreign")
  user                               user?     @relation(fields: [assigned_user_id], references: [user_id], onDelete: Cascade, map: "submission_assigned_user_id_foreign")

  @@schema("public")
}

model user {
  user_id           String             @id @db.Uuid
  idp               String?
  sub               String             @unique(map: "user_sub_unique")
  email             String?
  first_name        String?
  full_name         String?
  last_name         String?
  active            Boolean            @default(true)
  created_by        String?            @default("00000000-0000-0000-0000-000000000000")
  created_at        DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by        String?
  updated_at        DateTime?          @db.Timestamptz(6)
  access_request    access_request[]
  contact           contact[]
  enquiry           enquiry[]
  submission        submission[]
  identity_provider identity_provider? @relation(fields: [idp], references: [idp], onDelete: Cascade, map: "user_idp_foreign")

  @@index([email], map: "user_email_index")
  @@index([sub], map: "user_username_index")
  @@index([sub], map: "user_sub_index")
  @@schema("public")
}

model action {
  action_id  Int       @id @default(autoincrement())
  name       String    @unique(map: "action_name_unique")
  created_by String?   @default("00000000-0000-0000-0000-000000000000")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  updated_at DateTime? @db.Timestamptz(6)
  policy     policy[]

  @@schema("yars")
}

model attribute {
  attribute_id     Int                @id @default(autoincrement())
  name             String             @unique(map: "attribute_name_unique")
  description      String?
  created_by       String?            @default("00000000-0000-0000-0000-000000000000")
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by       String?
  updated_at       DateTime?          @db.Timestamptz(6)
  attribute_group  attribute_group[]
  policy_attribute policy_attribute[]

  @@schema("yars")
}

model attribute_group {
  attribute_id Int
  group_id     Int
  created_by   String?   @default("00000000-0000-0000-0000-000000000000")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_by   String?
  updated_at   DateTime? @db.Timestamptz(6)
  attribute    attribute @relation(fields: [attribute_id], references: [attribute_id], onDelete: Cascade, map: "attribute_group_attribute_id_foreign")
  group        group     @relation(fields: [group_id], references: [group_id], onDelete: Cascade, map: "attribute_group_group_id_foreign")

  @@id([attribute_id, group_id])
  @@schema("yars")
}

model group {
  group_id        Int               @id @default(autoincrement())
  initiative_id   String            @db.Uuid
  name            String
  label           String
  created_by      String?           @default("00000000-0000-0000-0000-000000000000")
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_by      String?
  updated_at      DateTime?         @db.Timestamptz(6)
  attribute_group attribute_group[]
  initiative      initiative        @relation(fields: [initiative_id], references: [initiative_id], onDelete: Cascade, map: "group_initiative_id_foreign")
  group_role      group_role[]
  subject_group   subject_group[]

  @@unique([initiative_id, name], map: "group_initiative_id_name_unique")
  @@schema("yars")
}

model group_role {
  group_id   Int
  role_id    Int
  created_by String?   @default("00000000-0000-0000-0000-000000000000")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  updated_at DateTime? @db.Timestamptz(6)
  group      group     @relation(fields: [group_id], references: [group_id], onDelete: Cascade, map: "group_role_group_id_foreign")
  role       role      @relation(fields: [role_id], references: [role_id], onDelete: Cascade, map: "group_role_role_id_foreign")

  @@id([group_id, role_id])
  @@schema("yars")
}

model policy {
  policy_id        Int                @id @default(autoincrement())
  resource_id      Int
  action_id        Int
  created_by       String?            @default("00000000-0000-0000-0000-000000000000")
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by       String?
  updated_at       DateTime?          @db.Timestamptz(6)
  action           action             @relation(fields: [action_id], references: [action_id], onDelete: Cascade, map: "policy_action_id_foreign")
  resource         resource           @relation(fields: [resource_id], references: [resource_id], onDelete: Cascade, map: "policy_resource_id_foreign")
  policy_attribute policy_attribute[]
  role_policy      role_policy[]

  @@unique([resource_id, action_id], map: "policy_resource_id_action_id_unique")
  @@schema("yars")
}

model policy_attribute {
  policy_id    Int
  attribute_id Int
  created_by   String?   @default("00000000-0000-0000-0000-000000000000")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_by   String?
  updated_at   DateTime? @db.Timestamptz(6)
  attribute    attribute @relation(fields: [attribute_id], references: [attribute_id], onDelete: Cascade, map: "policy_attribute_attribute_id_foreign")
  policy       policy    @relation(fields: [policy_id], references: [policy_id], onDelete: Cascade, map: "policy_attribute_policy_id_foreign")

  @@id([policy_id, attribute_id])
  @@schema("yars")
}

model resource {
  resource_id Int       @id @default(autoincrement())
  name        String    @unique(map: "resource_name_unique")
  created_by  String?   @default("00000000-0000-0000-0000-000000000000")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_by  String?
  updated_at  DateTime? @db.Timestamptz(6)
  policy      policy[]

  @@schema("yars")
}

model role {
  role_id         Int           @id @default(autoincrement())
  name            String        @unique(map: "role_name_unique")
  description     String?
  record_security Boolean       @default(false)
  created_by      String?       @default("00000000-0000-0000-0000-000000000000")
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  updated_by      String?
  updated_at      DateTime?     @db.Timestamptz(6)
  group_role      group_role[]
  role_policy     role_policy[]

  @@schema("yars")
}

model role_policy {
  role_id    Int
  policy_id  Int
  created_by String?   @default("00000000-0000-0000-0000-000000000000")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  updated_at DateTime? @db.Timestamptz(6)
  policy     policy    @relation(fields: [policy_id], references: [policy_id], onDelete: Cascade, map: "role_policy_policy_id_foreign")
  role       role      @relation(fields: [role_id], references: [role_id], onDelete: Cascade, map: "role_policy_role_id_foreign")

  @@id([role_id, policy_id])
  @@schema("yars")
}

model subject_group {
  sub        String
  group_id   Int
  created_by String?   @default("00000000-0000-0000-0000-000000000000")
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_by String?
  updated_at DateTime? @db.Timestamptz(6)
  group      group     @relation(fields: [group_id], references: [group_id], onDelete: Cascade, map: "subject_group_group_id_foreign")

  @@id([sub, group_id])
  @@schema("yars")
}

model draft {
  draft_id                                String     @id @db.Uuid
  activity_id                             String
  draft_code                              String
  data                                    Json       @db.Json
  created_by                              String?    @default("00000000-0000-0000-0000-000000000000")
  created_at                              DateTime?  @default(now()) @db.Timestamptz(6)
  updated_by                              String?
  updated_at                              DateTime?  @db.Timestamptz(6)
  activity                                activity   @relation(fields: [activity_id], references: [activity_id], onDelete: Cascade, map: "draft_activity_id_foreign")
  draft_code_draft_draft_codeTodraft_code draft_code @relation("draft_draft_codeTodraft_code", fields: [draft_code], references: [draft_code], onDelete: Cascade, map: "draft_draft_code_foreign")

  @@schema("public")
}

model draft_code {
  draft_code                         String    @id
  created_by                         String?   @default("00000000-0000-0000-0000-000000000000")
  created_at                         DateTime? @default(now()) @db.Timestamptz(6)
  updated_by                         String?
  updated_at                         DateTime? @db.Timestamptz(6)
  draft_draft_draft_codeTodraft_code draft[]   @relation("draft_draft_codeTodraft_code")

  @@schema("public")
}

model email_log {
  email_log_id String    @id @db.Uuid
  http_status  Int?
  msg_id       String?   @db.Uuid
  to           String?
  tx_id        String?   @db.Uuid
  created_by   String?   @default("00000000-0000-0000-0000-000000000000")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_by   String?
  updated_at   DateTime? @db.Timestamptz(6)

  @@schema("public")
}

view group_role_policy_vw {
  row_number      BigInt  @unique
  group_id        Int?
  initiative_code String?
  group_name      String?
  role_name       String?
  policy_id       Int?
  resource_name   String?
  action_name     String?

  @@schema("yars")
}

enum access_request_status_enum {
  Approved
  Pending
  Rejected

  @@schema("public")
}
