---
openapi: 3.0.2
info:
  version: 1.0.0
  title: NR PermitConnect Navigator Service (PCNS)
  description: >-
    A case management application meant to serve the needs of the NRM Permitting
    Solutions Branch.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /api/v1
    description: This server
security:
  - BearerAuth: []
    OpenID: []
tags:
  - name: Contact
    description: Operations for managing Contacts
  - name: Electrification Access Request
    description: Operations for managing Electrification Access Requests
  - name: Electrification Document
    description: Operations for managing Electrification Documents
  - name: Electrification Enquiry
    description: Operations for managing Electrification Enquiries
  - name: Electrification Note
    description: Operations for managing Electrification Notes
  - name: Electrification Permit
    description: Operations for managing Electrification Permits
  - name: Electrification Permit Note
    description: Operations for Electrification Permit Notes
  - name: Electrification Project
    description: Operations for managing Electrification Projects, Drafts, and Statistics
  - name: Electrification Roadmap
    description: Operations for validating Electrification Roadmaps
  - name: Housing Access Request
    description: Operations for managing Housing Access Requests
  - name: Housing Document
    description: Operations for managing Housing Documents
  - name: Housing Enquiry
    description: Operations for managing Housing Enquiries
  - name: Housing Note
    description: Operations for managing Housing Notes
  - name: Housing Permit
    description: Operations for managing Housing Permits
  - name: Housing Permit Note
    description: Operations for Housing Permit Notes
  - name: Housing Project
    description: Operations for managing Housing Projects, Drafts, and Statistics
  - name: Housing Roadmap
    description: Operations for validating Housing Roadmaps
  - name: Reporting
    description: Operations for performings actions related to reporting
  - name: Source System Kind
    description: Operations for source system kinds
  - name: User
    description: Operations for managing users
paths:
  /contact:
    get:
      summary: Get current user contact
      description: >-
        Gets contact information based on the request's current user context.
      operationId: getCurrentUserContact
      tags:
        - Contact
      responses:
        '201':
          description: Document created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /contact/{contactId}:
    get:
      summary: Get a specific contact
      operationId: getContact
      tags:
        - Contact
      parameters:
        - $ref: '#/components/parameters/Path-ContactId'
        - in: query
          name: includeActivities
          required: false
          schema:
            type: boolean
            description: Whether to include connected Activity IDs
      responses:
        '200':
          description: Details of the specific contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Contact'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update an contact
      operationId: updateContact
      tags:
        - Contact
      parameters:
        - $ref: '#/components/parameters/Path-ContactId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DB-Contact'
      responses:
        '200':
          description: Contact updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Contact'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a contact
      description: >-
        Deletes the contact with the supplied **`contactId`**.
        Returns **204 No Content** when the record is deleted.
        Returns **404 Not Found** when no matching contact exists.
      tags:
        - Contacts
      operationId: deleteContact
      parameters:
        - $ref: '#/components/parameters/Path-ContactId'
      responses:
        '204':
          description: Contact successfully deleted, empty body
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
  /contact/match:
    post:
      summary: Match contacts
      description: Returns a list of contacts if any of the given queries match
      operationId: matchContacts
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Match by specific email address
                  example: JaneDoe@email.com
                firstName:
                  type: string
                  description: Match by specific first name
                  example: Jane
                lastName:
                  type: string
                  description: Match by specific last name
                  example: Doe
                phoneNumber:
                  type: string
                  description: Match by specific phone number
                  example: (123) 456-7890
      responses:
        '200':
          description: A list of contacts matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Contact'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /contact/search:
    get:
      summary: Search contacts
      description: Returns a list of contacts based on the given queries
      operationId: searchContacts
      tags:
        - Contact
      parameters:
        - in: query
          name: contactApplicantRelationship
          required: false
          schema:
            type: string
            description: The contact applicant relationship type to filter on
            example: Property owner
        - in: query
          name: contactPreference
          required: false
          schema:
            type: string
            description: The Contact's contact preference
            example: Email
        - in: query
          name: contactId
          required: false
          schema:
            type: array
            description: The Contact IDs to filter on
            items:
              $ref: '#/components/parameters/Path-ContactId'
        - in: query
          name: email
          required: false
          schema:
            type: string
            description: The Contact's email to filter on
            example: JaneDoe@email.com
        - in: query
          name: firstName
          required: false
          schema:
            type: string
            description: The Contact's firstName to filter on
            example: Jane
        - in: query
          name: lastName
          required: false
          schema:
            type: string
            description: The Contact's lastName to filter on
            example: Doe
        - in: query
          name: phoneNumber
          required: false
          schema:
            type: string
            description: The Contact's phoneNumber to filter on
            example: (123) 456-7890
        - in: query
          name: userId
          required: false
          schema:
            type: array
            description: The Contact User IDs to filter on
            items:
              $ref: '#/components/parameters/Query-UserId'
      responses:
        '200':
          description: A list of contacts matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Contact'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/accessRequest:
    get:
      summary: Get access requests
      description: >-
        Get a list of access requests
      operationId: getElectrificationAccessRequest
      tags:
        - Electrification Access Request
      responses:
        '200':
          description: A list of access requests for the initiative
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-AccessRequest'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create access request
      description: >-
        Create a request to grant or revoke a users access
      operationId: createElectrificationAccessRequest
      tags:
        - Electrification Access Request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-AccessRequest'
      responses:
        '200':
          description: Access request processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-AccessRequest'
        '201':
          description: Access request created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-AccessRequest'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/accessRequest/{accessRequestId}:
    post:
      summary: Process access request
      description: >-
        Process a request to grant or revoke a users access
      operationId: processElectrificationAccessRequest
      tags:
        - Electrification Access Request
      parameters:
        - $ref: '#/components/parameters/Path-AccessRequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                approve:
                  type: boolean
                  example: true
      responses:
        '204':
          description: Returns no content success
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/document:
    put:
      summary: Create a document
      description: >-
        Creates a link between an activity and a previously existing object in
        COMS.
      operationId: createElectrificationDocument
      tags:
        - Electrification Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-Document'
      responses:
        '201':
          description: Document created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/document/{documentId}:
    delete:
      summary: Delete a document by ID
      description: Deletes the document associated with the provided document ID.
      operationId: deleteElectrificationDocument
      tags:
        - Electrification Document
      parameters:
        - $ref: '#/components/parameters/Path-DocumentId'
      responses:
        '200':
          description: Document deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/document/list/{activityId}:
    get:
      summary: List documents by Activity ID
      description: Retrieves a list of documents associated with a given activity.
      operationId: listElectrificationDocuments
      tags:
        - Electrification Document
      parameters:
        - $ref: '#/components/parameters/Path-ActivityId'
      responses:
        '200':
          description: A list of documents for the specified activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/enquiry:
    get:
      summary: Gets a list of enquiries
      description: >-
        Gets a list of enquiries, if the current authorization includes scope:self
        the list returned will contain just the enquiries made by the user.
      operationId: getElectrificationEnquiries
      tags:
        - Electrification Enquiry
      responses:
        '200':
          description: A list of enquiries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Create an enquiry
      description: Creates an enquiry and set status to Submitted
      operationId: putElectrificationEnquiry
      tags:
        - Electrification Enquiry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-CreateEnquiry'
      responses:
        '201':
          description: Enquiry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-CreateEnquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/enquiry/{enquiryId}:
    get:
      summary: Get a specific enquiry
      operationId: getElectrificationEnquiry
      tags:
        - Electrification Enquiry
      parameters:
        - $ref: '#/components/parameters/Path-EnquiryId'
      responses:
        '200':
          description: Details of the specific enquiry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update an enquiry
      operationId: updateElectrificationEnquiry
      tags:
        - Electrification Enquiry
      parameters:
        - $ref: '#/components/parameters/Path-EnquiryId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DB-Enquiry'
      responses:
        '200':
          description: Enquiry updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete an electrification enquiry
      description: A delete of an electrification enquiry
      operationId: deleteElectrificationEnquiry
      tags:
        - Electrification Enquiry
      parameters:
        - $ref: '#/components/parameters/Path-EnquiryId'
      responses:
        '204':
          description: Returns no content success
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/enquiry/search:
    get:
      summary: Search enquiries
      description: Returns a list of enquiries based on the given queries
      operationId: searchElectrificationEnquiries
      tags:
        - Electrification Enquiry
      parameters:
        - $ref: '#/components/parameters/Query-IncludeUser'
        - in: query
          name: activityId
          required: false
          schema:
            type: array
            description: The Activity IDs to filter on
            items:
              $ref: '#/components/parameters/Path-ActivityId'
        - in: query
          name: createdBy
          required: false
          schema:
            type: array
            description: The User IDs to filter on
            items:
              $ref: '#/components/parameters/Query-CreatedBy'
        - in: query
          name: enquiryId
          required: false
          schema:
            type: array
            description: The Enquiry IDs to filter on
            items:
              $ref: '#/components/parameters/Path-EnquiryId'
        - in: query
          name: intakeStatus
          required: false
          schema:
            type: array
            description: The intake statuses to filter on
            items:
              $ref: '#/components/parameters/IntakeStatus'
      responses:
        '200':
          description: A list of enquiries matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/note:
    put:
      summary: Create a note history
      operationId: createElectrificationNoteHistory
      tags:
        - Electrification Note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-NoteHistory'
      responses:
        '201':
          description: Note history created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/note/{noteHistoryId}:
    put:
      summary: Update a note history
      operationId: updateElectrificationNoteHistory
      tags:
        - Electrification Note
      parameters:
        - $ref: '#/components/parameters/Path-NoteHistoryId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-NoteHistory'
      responses:
        '200':
          description: Note history updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a note history
      description: Soft deletes a note history by marking isDeleted true
      operationId: deleteElectrificationNoteHistory
      tags:
        - Electrification Note
      parameters:
        - $ref: '#/components/parameters/Path-NoteHistoryId'
      responses:
        '200':
          description: Note history deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
  /electrification/note/bringForward:
    get:
      summary: List note histories with bring forward type
      description: Retrieve a list of note histories with the Bring forward type given
      operationId: listElectrificationBringForward
      tags:
        - Electrification Note
      parameters:
        - $ref: '#/components/parameters/Query-BringForwardState'
      responses:
        '200':
          description: A list of bring forward note histories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response-BringForwardNotes'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /electrification/note/list/{activityId}:
    get:
      summary: List note histories by Activity ID
      description: Return a list of note histories that have the given Activity ID
      operationId: listElectrificationNoteHistory
      tags:
        - Electrification Note
      parameters:
        - $ref: '#/components/parameters/Path-ActivityId'
      responses:
        '200':
          description: A list of note histories for the specified activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/permit:
    get:
      summary: List permits by Activity ID
      description: Gets a list of permits that are associated to a specific activity
      operationId: listElectrificationPermits
      tags:
        - Electrification Permit
      parameters:
        - $ref: '#/components/parameters/Query-ActivityId'
        - in: query
          name: includeNotes
          description: Whether to include associated permit notes in the response.
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: A list of permits for the specified activity
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/DB-Permit'
                    - type: object
                      properties:
                        permitNotes:
                          type: array
                          description: List of notes associated with the permit (if `includeNotes` is true)
                          items:
                            $ref: '#/components/schemas/DB-PermitNote'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/permit/{permitId}:
    get:
      summary: Get a permit
      operationId: getElectrificationPermit
      tags:
        - Electrification Permit
      parameters:
        - $ref: '#/components/parameters/Path-PermitId'
      responses:
        '200':
          description: Permit updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Permit'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a permit
      operationId: deleteElectrificationPermit
      tags:
        - Electrification Permit
      parameters:
        - $ref: '#/components/parameters/Path-PermitId'
      responses:
        '200':
          description: Permit deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Permit'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/permit/types:
    get:
      summary: Get all permit types
      operationId: getElectrificationPermitTypes
      tags:
        - Electrification Permit
      responses:
        '200':
          description: A list of all permit types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-PermitType'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /electrification/permit/note:
    put:
      summary: Create a permit note
      description: Creates a new permit note for a specified permit.
      operationId: createElectrificationPermitNote
      tags:
        - Electrification Permit Note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-PermitNote'
      responses:
        '201':
          description: Permit note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-PermitNote'
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Error'
  /electrification/project:
    get:
      summary: Get a list of electrification projects
      operationId: getElectrificationProjects
      tags:
        - Electrification Project
      responses:
        '200':
          description: A list of electrification projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-ElectrificationProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Create a electrification project
      operationId: createElectrificationProject
      tags:
        - Electrification Project
      responses:
        '201':
          description: Electrification Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-ElectrificationProjectCreate'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/project/{electrificationProjectId}:
    get:
      summary: Get a specific electrification project
      operationId: getElectrificationProject
      tags:
        - Electrification Project
      parameters:
        - $ref: '#/components/parameters/Path-ElectrificationProjectId'
      responses:
        '200':
          description: Details of the specific electrification project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-ElectrificationProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update a electrification project
      operationId: updateElectrificationProject
      tags:
        - Electrification Project
      parameters:
        - $ref: '#/components/parameters/Path-ElectrificationProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-ElectrificationProjectUpdate'
      responses:
        '200':
          description: Electrification Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-ElectrificationProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete an electrification project
      description: Delete of an electrification project
      operationId: deleteElectrificationProject
      tags:
        - Electrification Project
      parameters:
        - $ref: '#/components/parameters/Path-ElectrificationProjectId'
      responses:
        '204':
          description: Returns no content success
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/project/draft:
    put:
      summary: Create or update a draft electrification project
      description: >-
        Creates or updates an intake and set status to Draft
        so unfinished/unvalidatd electrification projects can be saved
      operationId: electrificationProject-createDraft
      tags:
        - Electrification Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-SaveElectrificationProjectDraft'
      responses:
        '201':
          description: Draft electrification project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-DraftElectrificationProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /electrification/project/draft/submit:
    put:
      summary: Submit a draft electrification project
      description: Creates or updates an intake and set status to Submitted
      operationId: electrificationProject-updateDraft
      tags:
        - Electrification Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-SaveElectrificationProjectDraft'
      responses:
        '200':
          description: Draft electrification project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-ElectrificationProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
  /electrification/project/email:
    put:
      summary: Send confirmation Email
      operationId: electrificationEmailConfirmation
      tags:
        - Electrification Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailData'
      responses:
        '201':
          description: Email Confirmation was set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-Email'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/project/search:
    get:
      summary: Search electrification projects
      description: Returns a list of electrification projects based on the given queries
      operationId: searchElectrificationProjects
      tags:
        - Electrification Project
      parameters:
        - $ref: '#/components/parameters/Query-IncludeUser'
        - in: query
          name: activityId
          required: false
          schema:
            type: array
            description: The Activity IDs to filter on
            items:
              $ref: '#/components/parameters/Path-ActivityId'
        - in: query
          name: createdBy
          required: false
          schema:
            type: array
            description: The User IDs to filter on
            items:
              $ref: '#/components/parameters/Query-CreatedBy'
        - in: query
          name: electrificationProjectId
          required: false
          schema:
            type: array
            description: The Electrification Project IDs to filter on
            items:
              $ref: '#/components/parameters/Path-ElectrificationProjectId'
      responses:
        '200':
          description: A list of electrification projects matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-ElectrificationProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/project/statistics:
    get:
      summary: Get electrification project and enquiry statistics
      description: Gets a set of electrification project and enquiry related statistics
      operationId: getElectrificationStatistics
      tags:
        - Electrification Project
      parameters:
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
            description: Start date for the statistics
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
            description: End date for the statistics
        - in: query
          name: monthYear
          required: false
          schema:
            type: string
            description: Month and year for the statistics
        - in: query
          name: userId
          required: false
          schema:
            type: string
            description: User ID to filter statistics
      responses:
        '200':
          description: Electrification submission statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-ElectrificationSubmissionStatistics'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /electrification/roadmap:
    put:
      summary: Send an email with the roadmap data
      operationId: electrificationRoadmap
      tags:
        - Electrification Roadmap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-Roadmap'
      responses:
        '201':
          description: Permit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-Email'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/accessRequest:
    get:
      summary: Get access requests
      description: >-
        Get a list of access requests
      operationId: getHousingAccessRequest
      tags:
        - Housing Access Request
      responses:
        '200':
          description: A list of access requests for the initiative
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-AccessRequest'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Create access request
      description: >-
        Create a request to grant or revoke a users access
      operationId: createHousingAccessRequest
      tags:
        - Housing Access Request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-AccessRequest'
      responses:
        '200':
          description: Access request processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-AccessRequest'
        '201':
          description: Access request created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-AccessRequest'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/accessRequest/{accessRequestId}:
    post:
      summary: Process access request
      description: >-
        Process a request to grant or revoke a users access
      operationId: processHousingAccessRequest
      tags:
        - Housing Access Request
      parameters:
        - $ref: '#/components/parameters/Path-AccessRequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                approve:
                  type: boolean
                  example: true
      responses:
        '204':
          description: Returns no content success
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/document:
    put:
      summary: Create a document
      description: >-
        Creates a link between an activity and a previously existing object in
        COMS.
      operationId: createHousingDocument
      tags:
        - Housing Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-Document'
      responses:
        '201':
          description: Document created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/document/{documentId}:
    delete:
      summary: Delete a document by ID
      description: Deletes the document associated with the provided document ID.
      operationId: deleteHousingDocument
      tags:
        - Housing Document
      parameters:
        - $ref: '#/components/parameters/Path-DocumentId'
      responses:
        '200':
          description: Document deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/document/list/{activityId}:
    get:
      summary: List documents by Activity ID
      description: Retrieves a list of documents associated with a given activity.
      operationId: listHousingDocuments
      tags:
        - Housing Document
      parameters:
        - $ref: '#/components/parameters/Path-ActivityId'
      responses:
        '200':
          description: A list of documents for the specified activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Document'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/enquiry:
    get:
      summary: Gets a list of enquiries
      description: >-
        Gets a list of enquiries, if the current authorization includes scope:self
        the list returned will contain just the enquiries made by the user.
      operationId: getHousingEnquiries
      tags:
        - Housing Enquiry
      responses:
        '200':
          description: A list of enquiries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Create an enquiry
      description: Creates an enquiry and set status to Submitted
      operationId: putHousingEnquiry
      tags:
        - Housing Enquiry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-CreateEnquiry'
      responses:
        '201':
          description: Enquiry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-CreateEnquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/enquiry/{enquiryId}:
    get:
      summary: Get a specific enquiry
      operationId: getHousingEnquiry
      tags:
        - Housing Enquiry
      parameters:
        - $ref: '#/components/parameters/Path-EnquiryId'
      responses:
        '200':
          description: Details of the specific enquiry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update an enquiry
      operationId: updateHousingEnquiry
      tags:
        - Housing Enquiry
      parameters:
        - $ref: '#/components/parameters/Path-EnquiryId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DB-Enquiry'
      responses:
        '200':
          description: Enquiry updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a housing enquiry
      description: Delete a housing enquiry
      operationId: deleteHousingEnquiry
      tags:
        - Housing Enquiry
      parameters:
        - $ref: '#/components/parameters/Path-EnquiryId'
      responses:
        '204':
          description: Returns no content success
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/enquiry/search:
    get:
      summary: Search enquiries
      description: Returns a list of enquiries based on the given queries
      operationId: searchHousingEnquiries
      tags:
        - Housing Enquiry
      parameters:
        - $ref: '#/components/parameters/Query-IncludeUser'
        - in: query
          name: activityId
          required: false
          schema:
            type: array
            description: The Activity IDs to filter on
            items:
              $ref: '#/components/parameters/Path-ActivityId'
        - in: query
          name: createdBy
          required: false
          schema:
            type: array
            description: The User IDs to filter on
            items:
              $ref: '#/components/parameters/Query-CreatedBy'
        - in: query
          name: enquiryId
          required: false
          schema:
            type: array
            description: The Enquiry IDs to filter on
            items:
              $ref: '#/components/parameters/Path-EnquiryId'
        - in: query
          name: intakeStatus
          required: false
          schema:
            type: array
            description: The intake statuses to filter on
            items:
              $ref: '#/components/parameters/IntakeStatus'
      responses:
        '200':
          description: A list of enquiries matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-Enquiry'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/note:
    put:
      summary: Create a note history
      operationId: createHousingNoteHistory
      tags:
        - Housing Note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-NoteHistory'
      responses:
        '201':
          description: Note history created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/note/{noteHistoryId}:
    put:
      summary: Update a note history
      operationId: updateHousingNoteHistory
      tags:
        - Housing Note
      parameters:
        - $ref: '#/components/parameters/Path-NoteHistoryId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-NoteHistory'
      responses:
        '200':
          description: Note history updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a note history
      description: Soft deletes a note history by marking isDeleted true
      operationId: deleteHousingNoteHistory
      tags:
        - Housing Note
      parameters:
        - $ref: '#/components/parameters/Path-NoteHistoryId'
      responses:
        '200':
          description: Note history deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
  /housing/note/bringForward:
    get:
      summary: List note histories with bring forward type
      description: Retrieve a list of note histories with the Bring forward type given
      operationId: listHousingBringForward
      tags:
        - Housing Note
      parameters:
        - $ref: '#/components/parameters/Query-BringForwardState'
      responses:
        '200':
          description: A list of bring forward note histories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response-BringForwardNotes'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /housing/note/list/{activityId}:
    get:
      summary: List note histories by Activity ID
      description: Return a list of note histories that have the given Activity ID
      operationId: listHousingNoteHistory
      tags:
        - Housing Note
      parameters:
        - $ref: '#/components/parameters/Path-ActivityId'
      responses:
        '200':
          description: A list of note histories for the specified activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response-NoteHistory'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/permit:
    get:
      summary: List permits by Activity ID
      description: Gets a list of permits that are associated to a specific activity
      operationId: listHousingPermits
      tags:
        - Housing Permit
      parameters:
        - $ref: '#/components/parameters/Query-ActivityId'
        - in: query
          name: includeNotes
          description: Whether to include associated permit notes in the response.
          required: false
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: A list of permits for the specified activity
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/DB-Permit'
                    - type: object
                      properties:
                        permitNotes:
                          type: array
                          description: List of notes associated with the permit (if `includeNotes` is true)
                          items:
                            $ref: '#/components/schemas/DB-PermitNote'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/permit/{permitId}:
    get:
      summary: Get a permit
      operationId: getHousingPermit
      tags:
        - Housing Permit
      parameters:
        - $ref: '#/components/parameters/Path-PermitId'
      responses:
        '200':
          description: Permit upserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Permit'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a permit
      operationId: deleteHousingPermit
      tags:
        - Housing Permit
      parameters:
        - $ref: '#/components/parameters/Path-PermitId'
      responses:
        '200':
          description: Permit deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-Permit'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/permit/types:
    get:
      summary: Get all permit types
      operationId: getHousingPermitTypes
      tags:
        - Housing Permit
      responses:
        '200':
          description: A list of all permit types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-PermitType'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /housing/permit/note:
    put:
      summary: Create a permit note
      description: Creates a new permit note for a specified permit.
      operationId: createHousingPermitNote
      tags:
        - Housing Permit Note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-PermitNote'
      responses:
        '201':
          description: Permit note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-PermitNote'
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/Error'
  /housing/project:
    get:
      summary: Get a list of housing projects
      operationId: getHousingProjects
      tags:
        - Housing Project
      responses:
        '200':
          description: A list of housing projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-HousingProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Create a housing project
      operationId: createHousingProject
      tags:
        - Housing Project
      responses:
        '201':
          description: Housing Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-HousingProjectCreate'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/project/{housingProjectId}:
    get:
      summary: Get a specific housing project
      operationId: getHousingProject
      tags:
        - Housing Project
      parameters:
        - $ref: '#/components/parameters/Path-HousingProjectId'
      responses:
        '200':
          description: Details of the specific housing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-HousingProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    put:
      summary: Update a housing project
      operationId: updateHousingProject
      tags:
        - Housing Project
      parameters:
        - $ref: '#/components/parameters/Path-HousingProjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-HousingProjectUpdate'
      responses:
        '200':
          description: Housing Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-HousingProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
    delete:
      summary: Delete a housing project
      operationId: deleteHousingProject
      tags:
        - Housing Project
      parameters:
        - $ref: '#/components/parameters/Path-HousingProjectId'
      responses:
        '204':
          description: Returns no content success
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/project/draft:
    put:
      summary: Create or update a draft housing project
      description: >-
        Creates or updates an intake and set status to Draft
        so unfinished/unvalidatd housing projects can be saved
      operationId: housingProject-createDraft
      tags:
        - Housing Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-SaveHousingProjectDraft'
      responses:
        '201':
          description: Draft housing project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-DraftHousingProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /housing/project/draft/submit:
    put:
      summary: Submit a draft housing project
      description: Creates or updates an intake and set status to Submitted
      operationId: housingProject-updateDraft
      tags:
        - Housing Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-SaveHousingProjectDraft'
      responses:
        '200':
          description: Draft housing project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-HousingProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/Error'
  /housing/project/email:
    put:
      summary: Send confirmation Email
      operationId: housingEmailConfirmation
      tags:
        - Housing Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailData'
      responses:
        '201':
          description: Email Confirmation was set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-Email'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/project/search:
    get:
      summary: Search housing projects
      description: Returns a list of housing projects based on the given queries
      operationId: searchHousingProjects
      tags:
        - Housing Project
      parameters:
        - $ref: '#/components/parameters/Query-IncludeUser'
        - in: query
          name: activityId
          required: false
          schema:
            type: array
            description: The Activity IDs to filter on
            items:
              $ref: '#/components/parameters/Path-ActivityId'
        - in: query
          name: createdBy
          required: false
          schema:
            type: array
            description: The User IDs to filter on
            items:
              $ref: '#/components/parameters/Query-CreatedBy'
        - in: query
          name: housingProjectId
          required: false
          schema:
            type: array
            description: The Housing Project IDs to filter on
            items:
              $ref: '#/components/parameters/Path-HousingProjectId'
        - in: query
          name: intakeStatus
          required: false
          schema:
            type: array
            description: The intake statuses to filter on
            items:
              $ref: '#/components/parameters/IntakeStatus'
        - in: query
          name: submissionType
          required: false
          schema:
            type: array
            description: The housing submission types to filter on
            items:
              $ref: '#/components/parameters/Query-SubmissionType'
      responses:
        '200':
          description: A list of housing projects matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DB-HousingProject'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/project/statistics:
    get:
      summary: Get housing project and enquiry statistics
      description: Gets a set of housing project and enquiry related statistics
      operationId: getHousingStatistics
      tags:
        - Housing Project
      parameters:
        - in: query
          name: dateFrom
          required: false
          schema:
            type: string
            format: date
            description: Start date for the statistics
        - in: query
          name: dateTo
          required: false
          schema:
            type: string
            format: date
            description: End date for the statistics
        - in: query
          name: monthYear
          required: false
          schema:
            type: string
            description: Month and year for the statistics
        - in: query
          name: userId
          required: false
          schema:
            type: string
            description: User ID to filter statistics
      responses:
        '200':
          description: Housing submission statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-HousingSubmissionStatistics'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /housing/roadmap:
    put:
      summary: Send an email with the roadmap data
      operationId: housingRoadmap
      tags:
        - Housing Roadmap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request-Roadmap'
      responses:
        '201':
          description: Permit created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-Email'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        default:
          $ref: '#/components/responses/Error'
  /reporting/electrificationProject/permit:
    get:
      summary: Query and retrieve all electrification project data related to permits
      operationId: getElectrificationProjectPermitData
      tags:
        - Reporting
      responses:
        '200':
          description: A list of housing projects joined with permits and permit type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response-HousingProjectPermitData'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /reporting/housingProject/permit:
    get:
      summary: Query and retrieve all housing project data related to permits
      operationId: getHousingProjectPermitData
      tags:
        - Reporting
      responses:
        '200':
          description: A list of housing projects joined with permits and permit type
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response-HousingProjectPermitData'
        "401":
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/Error'
  /sourceSystemKind:
    get:
      summary: List source system kinds
      description: Gets a list of all the source system kinds
      operationId: getSourceSystemKinds
      tags:
        - Source System Kind
      responses:
        '200':
          description: Source System Kinds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DB-SourceSystemKind'
        "401":
          $ref: "#/components/responses/Unauthorized"
  /user:
    get:
      summary: Search users
      description: Gets a list of users based on given parameters
      operationId: searchUsers
      tags:
        - User
      responses:
        '200':
          description: Users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response-SearchUsers'
        "401":
          $ref: "#/components/responses/Unauthorized"
components:
  parameters:
    IntakeStatus:
      in: path
      name: intakeStatus
      description: The intake status type of a submission
      required: true
      schema:
        type: string
        example: Assigned
    Path-AccessRequestId:
      in: path
      name: accessRequestId
      description: ID of an access request
      required: true
      schema:
        type: string
        example: 1
    Path-ActivityId:
      in: path
      name: activityId
      description: ID of an Activity
      required: true
      schema:
        type: string
        example: 2DE67F13
    Path-ContactId:
      in: path
      name: contactId
      description: UUID of a Contact
      required: true
      schema:
        type: string
        format: uuid
        example: b76469a3-896c-4435-aa83-b8b87db6f701
    Path-DocumentId:
      in: path
      name: documentId
      description: UUID of a Document
      required: true
      schema:
        type: string
        format: uuid
        example: b76469a3-896c-4435-aa83-b8b87db6f701
    Path-ElectrificationProjectId:
      in: path
      name: electrificationProjectId
      description: UUID of a Electrification Project
      required: true
      schema:
        type: string
        format: uuid
        example: da5c5031-0e84-4234-7766-1ba846997482
    Path-EnquiryId:
      in: path
      name: enquiryId
      description: UUID of an Enquiry
      required: true
      schema:
        type: string
        format: uuid
        example: b76469a3-896c-4435-aa83-b8b87db60921
    Path-HousingProjectId:
      in: path
      name: housingProjectId
      description: UUID of a Housing Project
      required: true
      schema:
        type: string
        format: uuid
        example: da5c5031-0e84-4234-7766-1ba846997482
    Path-NoteHistoryId:
      in: path
      name: noteHistoryId
      description: UUID of a Note History
      required: true
      schema:
        type: string
        format: uuid
        example: b76469a3-896c-4435-aa83-b8b87db6f555
    Path-PermitId:
      in: path
      name: permitId
      description: UUID of a Permit
      required: true
      schema:
        type: string
        format: uuid
        example: da5c5031-0e84-4234-8559-1ba846997482
    Path-SubmissionId:
      in: path
      name: housingProjectId
      description: UUID of a Submission
      required: true
      schema:
        type: string
        format: uuid
        example: da5c5031-0e84-4234-7766-1ba846997482
    Query-ActivityId:
      in: query
      name: activityId
      description: ID of an Activity
      required: true
      schema:
        type: string
        example: 2DE67F13
    Query-BringForwardState:
      in: query
      name: bringForwardState
      description: The state to filter on for bring forward notes
      required: true
      schema:
        type: string
        example: true
    Query-CreatedBy:
      in: query
      name: createdBy
      description: UUID of user who created data
      required: false
      schema:
        type: string
        format: uuid
        example: b76469a3-896c-4435-aa83-b8b87db6f701
    Query-IncludeUser:
      in: query
      name: includeUser
      description: >-
        Whether to include User data with each entity being returned by the results.
      required: false
      schema:
        type: boolean
        example: true
    Query-SubmissionType:
      in: query
      name: submissionType
      description: The submission type of the project
      required: false
      schema:
        type: string
        example: Guidance
        enum: [Guidance, Inapplicable]
    Query-UserId:
      in: query
      name: userId
      description: ID of an User
      required: false
      schema:
        type: string
        format: uuid
        example: b76469a3-896c-4435-aa83-b8b87db6f701
  schemas:
    DB-AccessRequest:
      title: DB Access Request
      type: object
      required:
        - accessRequestId
        - groupId
        - grant
      properties:
        accessRequestId:
          type: string
          format: uuid
          description: The ID of the access request
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        userId:
          type: string
          format: uuid
          description: The ID of the user
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        groupId:
          type: number
          description: The ID of the group to grant/revoke
          example: 1
        status:
          type: string
          description: Status of the access request
          example: Approved
        grant:
          type: boolean
          description: Should the groupId be granted
          example: true
    DB-Contact:
      title: DB Contact
      type: object
      required:
        - contactId
      properties:
        contactId:
          type: string
          format: uuid
          description: The ID of the contact
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        userId:
          type: string
          format: uuid
          description: The ID of the user associated with the contact
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        firstName:
          type: string
          description: First name of the contact person
          example: John
        lastName:
          type: string
          description: Last name of the contact person
          example: Smith
        phoneNumber:
          type: string
          description: Phone number for contact
          example: (123) 456-7890
        email:
          type: string
          format: email
          description: Email address for contact
          example: john.smith@example.com
        contactApplicantRelationship:
          type: string
          enum: [Property owner, Project consultant, Other]
          description: Relationship of the contact person to the project
          example: Agent
        contactPreference:
          type: string
          enum: [Phone call, Email, Either]
          description: Preferred method of contact
          example: Email
    DB-Document:
      title: DB Document
      type: object
      required:
        - activityId
        - documentId
        - filename
        - mimeType
        - length
      properties:
        activityId:
          type: string
          description: The ID of the activity associated with the document
          example: 2DE67F13
        documentId:
          type: string
          description: The unique identifier of the document
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        filename:
          type: string
          description: The original filename of the document
          example: example.jpeg
        mimeType:
          type: string
          description: The MIME type of the document
          example: image/jpeg
        length:
          type: number
          description: The size of the document in bytes
          example: 7414
        createdByFullName:
          type: string
          description: The full name of the user who created the document
          example: Smith, John
    DB-ElectrificationProject:
      type: object
      required:
        - electrificationProjectId
        - activityId
        - submittedAt
        - aaiUpdated
      properties:
        electrificationProjectId:
          type: string
          description: UUID for the electrification project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        assignedUserId:
          type: string
          description: User assigned to the electrification project
          example: Smith, John
        submittedAt:
          type: string
          description: Date it was submitted
          format: date-time
          example: '2024-04-03T00:57:09.070Z'
        intakeStatus:
          type: string
          description: Intake status type
          example: Submitted
        applicationStatus:
          type: string
          description: Status of the application
          example: New
        queuePriority:
          type: number
          description: Navigator assigned priority rank
          example: 3
        projectName:
          type: string
          description: Name of the Project
          example: New Project
        projectDescription:
          type: string
          description: A description of the project
          example: Project description example.
        companyNameRegistered:
          type: string
          description: Name of the company connected to the project
          example: QW URBAN FOOD LTD.
        projectType:
          type: string
          description: The type of project
          example: IPP Wind
        bcHydroNumber:
          type: string
          description: Assigned BC Hydro number
          example: 1234ABCD
        submissionType:
          type: string
          description: The type of submission
          example: Assistance
        hasEpa:
          type: string
          description: Indicates if an EPA document is present
          example: 'yes'
        bcEnvironmentAssessNeeded:
          type: string
          description: Indicates if BC Environment Assessment is needed
          example: 'no'
        megawatts:
          type: number
          description: Project capacity in megawatts
          example: 5.5
        locationDescription:
          type: string
          description: Description of the project location
          example: Near the main substation
        aaiUpdated:
          type: boolean
          description: Flag indicating if AAI was updated
          example: false
        atsClientId:
          type: integer
          description: ATS client identifier
          example: 789078
        astNotes:
          type: string
          description: AST notes
          example: Initial notes
    DB-Enquiry:
      title: DB Enquiry
      type: object
      required:
        - enquiryId
        - submittedBy
      properties:
        enquiryId:
          type: string
          description: UUID for an enquiry
          format: uuid
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        activityId:
          type: string
          description: ID for the activity
          example: 2DE67F13
        submissionType:
          type: string
          description: The type of enquiry
          example: General enquiry
        assignedUserId:
          type: string
          description: User assigned to enquiry
          example: Smith, John
        submittedAt:
          type: string
          format: date-time
          description: Date time enquiry was submitted
          example: '2024-08-27T02:11:45.986Z'
        submittedBy:
          type: string
          description: User who submitted enquiry
          example: JSMITH
        relatedActivityId:
          type: string
          description: Activity ID of related project
          example: 699BFA81
        enquiryDescription:
          type: string
          description: User description for enquiry
          example: This is a description for some enquiry
        createdAt:
          type: string
          format: date-time
          description: Date time for when note is to be brought forward
          example: '2024-08-14T07:00:00.000Z'
        createdBy:
          type: string
          description: UUID for user that created note
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b5717435cda8
        user:
          $ref: '#/components/schemas/DB-User'
    DB-HousingProject:
      type: object
      required:
        - housingProjectId
        - activityId
        - submittedAt
        - submittedBy
        - addedToAts
        - ltsaCompleted
        - bcOnlineCompleted
        - naturalDisaster
        - aaiUpdated
      properties:
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        assignedUserId:
          type: string
          description: User assigned to the housing project
          example: Smith, John
        submittedAt:
          type: string
          description: Date it was submitted
          format: date-time
          example: '2024-04-03T00:57:09.070Z'
        submittedBy:
          type: string
          description: Who made the housing project
          example: JSMITH
        locationPids:
          type: string
          description: Location PIDs
          example: 006-209-521, 007-209-522
        projectName:
          type: string
          description: Name of the Project
          example: New Project
        projectDescription:
          type: string
          description: A description of the project
          example: Project description example.
        companyNameRegistered:
          type: string
          description: Name of the company connected to the project
          example: QW URBAN FOOD LTD.
        singleFamilyUnits:
          type: string
          description: Range of units to be for single family
          example: 10-49
        hasRentalUnits:
          type: string
          description: Whether or not the project will have rental units
          example: 'Yes'
        streetAddress:
          type: string
          description: Street address of project
          example: 2975 Jutland Rd
        latitude:
          type: number
          description: Latitude Cordinate for project
          example: 48.440531
        longitude:
          type: number
          description: Longitude Cordinate for project
          example: -123.377677
        queuePriority:
          type: number
          description: Navigator assigned priority rank
          example: 3
        relatedPermits:
          type: string
          description: Permits related to the project
        astNotes:
          type: string
          description: Notes from AST
        astUpdated:
          type: boolean
          description: Whether updated by AST
          example: false
        addedToAts:
          type: boolean
          description: Whether added to AST
          example: false
        atsClientId:
          type: number
          description: Client number from ATS
        ltsaCompleted:
          type: boolean
          description: Ltsa completed
          example: false
        bcOnlineCompleted:
          type: boolean
          description: Completed
          example: false
        naturalDisaster:
          type: string
          description: Is it affected by Natural disaster?
          example: 'No'
        financiallySupported:
          type: boolean
          description: Is it financially supported?
          example: false
        financiallySupportedBc:
          type: string
          description: Is is financially supported by BC Housing?
          example: 'No'
        financiallySupportedIndigenous:
          type: string
          description: Is it an Indigenous led project?
          example: 'No'
        financiallySupportedNonProfit:
          type: string
          description: Is is financially supported by a Non-Profit
          example: 'No'
        financiallySupportedHousingCoop:
          type: string
          description: Is is financially supported by a House Cooperative
          example: 'No'
        aaiUpdated:
          type: boolean
          description: Updated by aai
          example: false
        intakeStatus:
          type: string
          description: Intake status type
          example: Submitted
        applicationStatus:
          type: string
          description: Status of the application
          example: New
        projectApplicantType:
          type: string
          enum: [Business, Individual]
          description: Are you applying as an individual or as a business?
          example: 'Business'
        isDevelopedInBc:
          type: string
          description: Is the project developed in BC?
          example: 'Yes'
        multiFamilyUnits:
          type: string
          description: Range of multi-family units in the project
          example: 10-49
        otherUnits:
          type: string
          description: Range of "other" units in the project
          example: 10-49
        otherUnitsDescription:
          type: string
          description: Description of the "other" units
          example: detached garages
        rentalUnits:
          type: string
          description: Range of rental units
          example: 1-9
        projectLocation:
          type: string
          description: Project's location
          example: Street address
        projectLocationDescription:
          type: string
          description: Description of the location of the project
          example: 'no'
        locality:
          type: string
          description: City, town, etc. (Location) of project
          example: Maple Ridge
        province:
          type: string
          description: Province (Location) of project
          example: BC
        hasAppliedProvincialPermits:
          type: string
          description: Has applied for provincial permits
          example: 'Yes'
        checkProvincialPermits:
          type: string
          description: Needs to check for provincial permits
          example: 'Yes'
        indigenousDescription:
          type: string
          description: Description for the Indigenous Led
        nonProfitDescription:
          type: string
          description: Description for  Non-Profit
        housingCoopDescription:
          type: string
          description: Description for COOP Housing
        consentToFeedback:
          type: boolean
          description: Whether or not user consents to feedback requests
    DB-Note:
      title: DB Note
      type: object
      required:
        - noteId
        - noteHistoryId
        - note
        - createdBy
        - createdAt
        - updatedBy
        - updatedAt
      properties:
        noteId:
          type: string
          description: UUID of a note
          format: uuid
          example: 17e5c858-66c1-49ba-bb2e-2b286525f532
        noteHistoryId:
          type: string
          description: UUID of a note history
          format: uuid
          example: 17e5c858-66c1-49ba-bb2e-2b286525f532
        note:
          type: string
          description: The note text
          example: Some new note text
        createdAt:
          type: string
          format: date-time
          description: Date time for when the note was created
          example: '2024-08-14T07:00:00.000Z'
        createdBy:
          type: string
          description: UUID for the user that created the note
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b5717435cda8
        updatedAt:
          type: string
          format: date-time
          description: Date time for when the note was last updated
          example: '2024-08-14T07:00:00.000Z'
        updatedBy:
          type: string
          description: UUID for user that last updated the note
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b5717435cda8
    DB-NoteHistory:
      title: DB Note History
      type: object
      required:
        - noteHistoryId
        - activityId
        - type
        - title
        - createdBy
        - createdAt
        - updatedBy
        - updatedAt
      properties:
        noteHistoryId:
          type: string
          description: UUID of a note history
          format: uuid
          example: 17e5c858-66c1-49ba-bb2e-2b286525f532
        activityId:
          type: string
          description: The ID of the activity the note is associated with
          example: 2DE67F13
        type:
          type: string
          description: Type of note
          example: Bring forward
        title:
          type: string
          description: Title of the note
          example: Some Title
        bringForwardDate:
          type: string
          format: date-time
          description: Date time for when note is to be brought forward
          example: '2029-08-14T07:00:00.000Z'
        bringForwardState:
          type: string
          description: State of a bring forward tyoe note
          example: Unresolved
        isDeleted:
          type: boolean
          description: Deletion flag
          example: false
        shownToProponent:
          type: boolean
          description: If the note history is displayed to the proponent
          example: false
        escalateToSupervisor:
          type: boolean
          description: If the note history is to be escalated to a supervisor
          example: false
        escalateToDirector:
          type: boolean
          description: If the note history is to be escalated to a director
          example: false
        escalationType:
          type: string
          description: A reason for the escalation
          example: Time-sensitive
        createdAt:
          type: string
          format: date-time
          description: Date time for when the note history was created
          example: '2024-08-14T07:00:00.000Z'
        createdBy:
          type: string
          description: UUID for the user that created the note history
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b5717435cda8
        updatedAt:
          type: string
          format: date-time
          description: Date time for when the note history was last updated
          example: '2024-08-14T07:00:00.000Z'
        updatedBy:
          type: string
          description: UUID for user that last updated the note history
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b5717435cda8
    DB-Permit:
      title: DB Permit
      type: object
      required:
        - permitId
        - activityId
        - permitTypeId
        - status
        - needed
        - updatedAt
        - updatedBy
      properties:
        permitId:
          type: string
          description: UUID for permit
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b57174354231
        activityId:
          type: string
          description: The ID of the activity associated with the permit
          example: 2DE67F13
        permitTypeId:
          type: number
          description: ID for the associated permit type
          example: 1
        issuedPermitId:
          type: string
          description: ID of the issued permit
          example: '123'
        trackingId:
          type: string
          description: ID for tracking permit
          example: H7kidnhd948594
        authStatus:
          type: string
          description: Status of authentication for the permit
          example: Pending
        needed:
          type: string
          description: Whether permit is needed, or still uner investigation
          example: Under Investigation
        status:
          type: string
          description: Status of the permit
          example: New
        submittedDate:
          type: string
          description: Date the permit was submitted
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        adjudicationDate:
          type: string
          description: Date of the permit's adjudication
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        statusLastVerified:
          type: string
          description: Date of the last verified status of permit
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: Date time for when permit was updated
          example: '2024-08-14T07:00:00.000Z'
        updatedBy:
          type: string
          description: UUID for user that updated permit
          format: uuid
          example: 68a9a188-4d67-46e3-92a4-b5717435cda8
        permitNotes:
          type: array
          description: A list of notes associated with the permit (if `includeNotes` is true)
          items:
            $ref: '#/components/schemas/DB-PermitNote'
    DB-PermitNote:
      title: DB Permit Note
      type: object
      required:
        - permitNoteId
        - permitId
        - note
        - isDeleted
        - createdAt
        - createdBy
      properties:
        permitNoteId:
          type: string
          description: UUID of the permit note
          format: uuid
          example: e76469a3-896c-4435-aa83-b8b87db6f701
        permitId:
          type: string
          description: UUID of the permit associated with the note
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        note:
          type: string
          description: The text content of the note
          example: "This is a note about the permit."
        isDeleted:
          type: boolean
          description: Flag indicating if the note is soft-deleted
          example: false
        createdAt:
          type: string
          format: date-time
          description: The timestamp of when the note was created
          example: '2024-11-15T10:00:00.000Z'
        createdBy:
          type: string
          description: The ID of the user who created the note
          format: uuid
          example: b76469a3-896c-4435-aa83-b8b87db6f701
    DB-PermitType:
      title: DB Permit Type
      type: object
      required:
        - agency
        - businessDomain
        - name
        - permitTypeId
        - sourceSystemAcronym
        - trackedInAts
        - type
      properties:
        permitTypeId:
          type: number
          description: ID for the permit type
          example: 1
        acronym:
          type: string
          description: Acronym for permit type name
          example: SAP
        agency:
          type: string
          description: Government agency
          example: Water, Land and Resource Stewardship
        branch:
          type: string
          description: Government branch
          example: Archaeology
        businessDomain:
          type: string
          description: Government business domain
          example: Archaeology
        division:
          type: string
          description: Government division
          example: Forest Resiliency and Archaeology
        family:
          type: string
          description: Family associated with permit type
          example: Crown Land Tenure
        name:
          type: string
          description: Name of permit type
          example: Site Alteration Permit
        nameSubtype:
          type: string
          description: Subtype of a permit type
          example: some name subtype
        sourceSystem:
          type: string
          description: Source of the system used for this permit type
          example: Archaeology Permit Tracking System
        sourceSystemAcronym:
          type: string
          description: Acronym for source system
          example: APTS
        trackedInAts:
          type: boolean
          description: Whether this permit type is tracked in ATS or not
          example: false
        type:
          type: string
          description: Type of permit type
          example: Alteration
    DB-SourceSystemKind:
      type: object
      properties:
        sourceSystemKindId:
          type: number
          description: ID for the source system kind
          example: 1
        kind:
          type: string
          description: Source system kind
          example: Project Number
        description:
          type: string
          description: Source system kind description
          example: Project Number
        sourceSystem:
          type: string
          description: Source system code
          example: ITSM-5314
    DB-User:
      type: object
      properties:
        userId:
          type: string
          description: UUID for the user
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb4464231
        idp:
          type: string
          description: Account/ Identity source
          example: idir
        sub:
          type: string
          description: Identity ID and source
          example: 333c6b2f38454628b638ca4ac52ea123@idir
        firstName:
          type: string
          description: First name for user
          example: John
        fullName:
          type: string
          description: Full name for user
          example: John Smith
        lastName:
          type: string
          description: Last name for user
          example: Smith
        email:
          type: string
          description: Email for for user
          example: john.smith@email.com
        active:
          type: boolean
          description: Active status of user
          example: true
    EmailData:
      type: object
      required:
        - bodyType
        - body
        - from
        - subject
        - to
      properties:
        bcc:
          type: array
          items:
            type: string
            format: email
          description: Array of BCC email addresses
        bodyType:
          type: string
          description: Type of the email body
        body:
          type: string
          description: Content of the email body
        cc:
          type: array
          items:
            type: string
            format: email
          description: Array of CC email addresses
        delayTS:
          type: number
          description: Timestamp for delayed sending
        from:
          type: string
          format: email
          description: Sender's email address
        priority:
          type: string
          description: Priority of the email
        subject:
          type: string
          description: Subject of the email
        tag:
          type: string
          description: Tag associated with the email
        to:
          type: array
          items:
            type: string
            format: email
          description: Array of recipient email addresses
    Enquiry-Basic:
      type: object
      properties:
        submissionType:
          type: string
          description: The type of enquiry
          example: General enquiry
        relatedActivityId:
          type: string
          description: Activity id of related project
          example: 699BFA81
        enquiryDescription:
          type: string
          description: User description for enquiry
          example: This is a description for some enquiry
    Request-AccessRequest:
      type: object
      required:
        - accessRequest
        - user
      properties:
        accessRequest:
          $ref: '#/components/schemas/DB-AccessRequest'
        user:
          $ref: '#/components/schemas/DB-User'
    Request-CreateEnquiry:
      type: object
      required:
        - contacts
        - basic
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/DB-Contact'
        basic:
          $ref: '#/components/schemas/Enquiry-Basic'
    Request-Document:
      type: object
      properties:
        activityId:
          type: string
          description: The ID of the activity associated with the document
          example: 2DE67F13
        documentId:
          type: string
          description: The unique identifier of the document
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        filename:
          type: string
          description: The original filename of the document
          example: example.jpeg
        mimeType:
          type: string
          description: The MIME type of the document
          example: image/jpeg
        length:
          type: number
          description: The size of the document in bytes
          example: 7414
    Request-NoteHistory:
      title: Request Note History
      type: object
      required:
        - activityId
        - type
        - title
        - createdBy
        - createdAt
        - updatedBy
        - updatedAt
      properties:
        activityId:
          type: string
          description: The ID of the activity the note is associated with
          example: 2DE67F13
        type:
          type: string
          description: Type of note
          example: Bring forward
        title:
          type: string
          description: Title of the note
          example: Some Title
        bringForwardDate:
          type: string
          format: date-time
          description: Date time for when note is to be brought forward
          example: '2029-08-14T07:00:00.000Z'
        bringForwardState:
          type: string
          description: State of a bring forward tyoe note
          example: Unresolved
        isDeleted:
          type: boolean
          description: Deletion flag
          example: false
        note:
          type: string
          description: Optional note to add to the history
          example: Some new note text
        shownToProponent:
          type: boolean
          description: If the note history is displayed to the proponent
          example: false
        escalateToSupervisor:
          type: boolean
          description: If the note history is to be escalated to a supervisor
          example: false
        escalateToDirector:
          type: boolean
          description: If the note history is to be escalated to a director
          example: false
        escalationType:
          type: string
          description: A reason for the escalation
          example: Time-sensitive
    Request-Permit:
      title: Request Permit
      type: object
      required:
        - activityId
        - needed
        - permitType
        - permitTypeId
        - status
      properties:
        activityId:
          type: string
          description: The ID of the activity associated with the permit
          example: 2DE67F13
        needed:
          type: string
          description: Whether permit is needed, or still uner investigation
          example: Under Investigation
        permitType:
          $ref: '#/components/schemas/DB-PermitType'
        permitTypeId:
          type: number
          description: ID for the associated permit type
          example: 1
        status:
          type: string
          description: Status of the permit
          example: New
        adjudicationDate:
          type: string
          description: Date of the permit's adjudication
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        authStatus:
          type: string
          description: Status of authentication for the permit
          example: Pending
        issuedPermitId:
          type: string
          description: ID of the issued permit
          example: '123'
        statusLastVerified:
          type: string
          description: Date of the last verified status of permit
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        submittedDate:
          type: string
          description: Date the permit was submitted
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        trackingId:
          type: string
          description: ID for tracking permit
          example: H7kidnhd948594
    Request-PermitNote:
      title: Request Permit Note
      type: object
      required:
        - permitId
        - note
      properties:
        permitId:
          type: string
          description: UUID of the permit associated with the note
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        note:
          type: string
          description: The text content of the note
          example: "This is a note about the permit."
    Request-Roadmap:
      title: Request Roadmap
      type: object
      required:
        - activityId
        - selectedFileIds
        - emailData
      properties:
        activityId:
          type: string
          description: ID of the activity
          example: null
        selectedFileIds:
          type: array
          items:
            type: string
            format: uuid
          description: Array of selected file IDs
        emailData:
          $ref: '#/components/schemas/EmailData'
    Request-SaveElectrificationProjectDraft:
      title: Save draft of Electrification Project
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/DB-Contact'
        electrificationProjectId:
          type: string
          description: UUID for the electrification project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        submittedAt:
          type: string
          format: date-time
          description: Date it was submitted
          example: '2024-04-03T00:57:09.070Z'
    Request-SaveHousingProjectDraft:
      title: Save draft of Housing Project
      type: object
      required:
        - contacts
        - basic
        - housing
        - location
        - permits
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/DB-Contact'
        basic:
          type: object
          properties:
            projectApplicantType:
              type: string
              enum: [Business, Individual]
              description: Are you applying as an individual or as a business?
              example: 'Business'
            isDevelopedInBc:
              type: boolean
              description: >-
                Indicates if the project is being developed in British Columbia
                (BC)
              example: true
            companyNameRegistered:
              type: string
              description: Name of the company associated with the project
              example: QW URBAN FOOD LTD.
        housing:
          type: object
          properties:
            projectName:
              type: string
              description: Name of the Project
              example: New Project
            projectDescription:
              type: string
              description: A description of the project
              example: Project description example.
            singleFamilyUnits:
              type: string
              description: Range of single-family units in the project
              example: 10-49
            multiFamilyUnits:
              type: string
              description: Range of multi-family units in the project
              example: 10-49
            otherUnitsDescription:
              type: string
              description: Description of the "other" units
              example: detached garages
              maxLength: 255
            otherUnits:
              type: string
              description: Range of "other" units in the project
              example: 10-49
            hasRentalUnits:
              type: string
              description: Whether or not the project will have rental units
              example: 'Yes'
            financiallySupportedBc:
              type: string
              description: Is it financially supported by BC Housing?
              example: 'No'
            financiallySupportedIndigenous:
              type: string
              description: Is it an Indigenous-led project?
              example: 'No'
            financiallySupportedNonProfit:
              type: string
              description: Is it financially supported by a Non-Profit?
              example: 'No'
            financiallySupportedHousingCoop:
              type: string
              description: Is it financially supported by a Housing Cooperative?
              example: 'No'
            rentalUnits:
              type: string
              description: Range of rental units
              example: 1-9
            indigenousDescription:
              type: string
              description: Description for the Indigenous-led project
              example: Indigenous project details
              maxLength: 255
            nonProfitDescription:
              type: string
              description: Description for Non-Profit supported project
              example: Non-Profit project details
              maxLength: 255
            housingCoopDescription:
              type: string
              description: Description for Housing Cooperative supported project
              example: Housing Cooperative project details
              maxLength: 255
        location:
          type: object
          properties:
            naturalDisaster:
              type: string
              description: Indicates if the project is affected by a natural disaster
              example: 'No'
            projectLocation:
              type: string
              description: Location of the project
              example: Street address
            projectLocationDescription:
              type: string
              description: Description of the project’s location
              example: Near the downtown area
            locationPids:
              type: string
              description: Location PIDs for the project
              example: 006-209-521, 007-209-522
            latitude:
              type: number
              description: Latitude coordinate for the project
              example: 48.440531
            longitude:
              type: number
              description: Longitude coordinate for the project
              example: -123.377677
            streetAddress:
              type: string
              description: Street address of the project
              example: 2975 Jutland Rd
            locality:
              type: string
              description: City, town, etc. (location) of the project
              example: Maple Ridge
            province:
              type: string
              description: Province (location) of the project
              example: BC
        permits:
          type: object
          properties:
            hasAppliedProvincialPermits:
              type: boolean
              description: Indicates whether the project has applied for provincial permits
              example: true
            checkProvincialPermits:
              type: boolean
              description: >-
                Indicates whether the project needs to check for provincial
                permits
              example: true
        appliedPermits:
          type: array
          items:
            $ref: '#/components/schemas/DB-Permit'
        investigatePermits:
          type: array
          items:
            $ref: '#/components/schemas/DB-Permit'
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        submittedAt:
          type: string
          format: date-time
          description: Date it was submitted
          example: '2024-04-03T00:57:09.070Z'
        submittedBy:
          type: string
          description: Who made the housing project
          example: JSMITH
        intakeStatus:
          type: string
          description: Intake status type
          example: Submitted
        applicationStatus:
          type: string
          description: Status of the application
          example: New
        submissionType:
          type: string
          description: The submission type of the project
          example: Guidance
    Request-HousingProjectSearch:
      title: Request Housing Project Search
      type: object
      required:
        - activityId
        - intakeStatus
        - includeUser
        - housingProjectId
        - submissionType
      properties:
        activityId:
          type: string
          description: ID of the activity
          example: 2DE67F13
        intakeStatus:
          type: string
          description: Intake status type
          example: Assigned
        includeUser:
          type: string
          description: If set it retrieves only this user's housing projects
          example: Smith, John
        housingProjectId:
          type: string
          description: UUID of housing project
          format: Uuid
          example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4
        submissionType:
          type: string
          description: The submission type of the project
          example: Guidance
    Request-ElectrificationProjectUpdate:
      title: Request to Update Electrification Project
      type: object
      required:
        - housingProjectId
        - activityId
        - submittedAt
      properties:
        electrificationProjectId:
          type: string
          description: UUID for the electrification project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        submittedAt:
          type: string
          description: Date it was submitted
          format: date-time
          example: '2024-04-03T00:57:09.070Z'
    Request-HousingProjectUpdate:
      title: Request to Update Housing Project
      type: object
      required:
        - housingProjectId
        - activityId
        - queuePriority
        - submissionType
        - submittedAt
        - projectName
        - hasRentalUnits
        - financiallySupportedBc
        - financiallySupportedIndigenous
        - financiallySupportedNonProfit
        - financiallySupportedHousingCoop
        - naturalDisaster
        - addedToAts
        - ltsaCompleted
        - bcOnlineCompleted
        - aaiUpdated
      properties:
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        queuePriority:
          type: number
          description: Navigator assigned priority rank
          format: integer
          example: 2
          default: 3
        submissionType:
          type: string
          description: The submission type of the project
          example: Guidance
        submittedAt:
          type: string
          description: Date it was submitted
          format: date-time
          example: '2024-04-03T00:57:09.070Z'
        companyNameRegistered:
          type: string
          description: Name of the company connected to the project
          example: QW URBAN FOOD LTD.
        isDevelopedInBc:
          type: string
          description: Is the project developed in BC?
          example: 'Yes'
        projectName:
          type: string
          description: Name of the Project
          example: New Project
        projectDescription:
          type: string
          description: Description of the project
          example: Project description example.
          nullable: true
        singleFamilyUnits:
          type: string
          description: Range of single-family units in the project
          example: 10-49
        multiFamilyUnits:
          type: string
          description: Range of multi-family units in the project
          example: 10-49
        otherUnitsDescription:
          type: string
          description: Description of the "other" units
          example: detached garages
          maxLength: 255
        otherUnits:
          type: string
          description: Range of "other" units in the project
          example: 10-49
        hasRentalUnits:
          type: string
          description: Whether or not the project will have rental units
          example: 'Yes'
        rentalUnits:
          type: string
          description: Range of rental units
          example: 1-9
          nullable: true
        financiallySupportedBc:
          type: string
          description: Is it financially supported by BC Housing?
          example: 'No'
        financiallySupportedIndigenous:
          type: string
          description: Is it an Indigenous-led project?
          example: 'No'
        indigenousDescription:
          type: string
          description: Description for the Indigenous-led project
          example: Indigenous project details
          maxLength: 255
        financiallySupportedNonProfit:
          type: string
          description: Is it financially supported by a Non-Profit?
          example: 'No'
        nonProfitDescription:
          type: string
          description: Description for Non-Profit supported project
          example: Non-Profit project details
          maxLength: 255
        financiallySupportedHousingCoop:
          type: string
          description: Is it financially supported by a Housing Cooperative?
          example: 'No'
        housingCoopDescription:
          type: string
          description: Description for Housing Cooperative supported project
          example: Housing Cooperative project details
          maxLength: 255
        streetAddress:
          type: string
          description: Street address of project
          example: 2975 Jutland Rd
          maxLength: 255
        locality:
          type: string
          description: City, town, etc. (Location) of project
          example: Victoria
          maxLength: 255
        province:
          type: string
          description: Province (Location) of project
          example: BC
          maxLength: 255
        locationPids:
          type: string
          description: Location PIDs
          example: 006-209-521, 007-209-522
          maxLength: 255
        latitude:
          type: number
          description: Latitude coordinate for the project
          example: 48.440531
        longitude:
          type: number
          description: Longitude coordinate for the project
          example: -123.377677
        geomarkUrl:
          type: string
          description: URL for geomark
          example: http://geomark.com
          maxLength: 255
        naturalDisaster:
          type: string
          description: Is it affected by a natural disaster?
          example: 'No'
        projectLocationDescription:
          type: string
          description: Description of the location of the project
          example: Near the river
          maxLength: 4000
        addedToAts:
          type: boolean
          description: Whether added to ATS
          example: false
        atsClientId:
          type: number
          description: Client number from ATS
          example: ATS-001
          maxLength: 255
        ltsaCompleted:
          type: boolean
          description: Ltsa completed
          example: false
        bcOnlineCompleted:
          type: boolean
          description: BC Online completed
          example: false
        aaiUpdated:
          type: boolean
          description: Updated by AAI
          example: false
        astNotes:
          type: string
          description: Notes from AST
          example: AST notes here
          maxLength: 4000
        intakeStatus:
          type: string
          description: Intake status type
          example: Submitted
        assignedUserId:
          type: string
          description: User ID assigned to the housing project
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        applicationStatus:
          type: string
          description: Status of the application
          example: New
        waitingOn:
          type: string
          description: Any dependencies or things waiting on
          example: Waiting on review
          maxLength: 255
    Response-BadRequest:
      title: Response Bad Request
      type: object
      allOf:
        - $ref: '#/components/schemas/Response-Problem'
        - type: object
          properties:
            status:
              example: 400
            title:
              example: Bad Request
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400
    Response-BringForwardNotes:
      type: object
      required:
        - activityId
        - noteId
        - title
        - projectName
        - createdByFullName
        - bringForwardDate
      properties:
        activityId:
          type: string
          description: The ID of the activity the note is associated with
          example: 2DE67F13
        noteId:
          type: string
          description: UUID of a note
          format: uuid
          example: 17e5c858-66c1-49ba-bb2e-2b286525f532
        housingProjectId:
          type: string
          description: UUID of a housing project
          format: uuid
          example: 17e5c858-66c1-49ba-bb2e-2b2865635421
        enquiryId:
          type: string
          description: UUID for an enquiry
          format: uuid
          example: b76469a3-896c-4435-aa83-b8b87db6f701
        title:
          type: string
          description: Title of the note
          example: Some Title
        createdByFullName:
          type: string
          description: The full name of the user who created the note
          example: Smith, John
        bringForwardDate:
          type: string
          format: date-time
          description: Date time for when note is to be brought forward
          example: '2029-08-14T07:00:00.000Z'
        projectName:
          type: string
          description: Name of the project the note is attached to
          example: The Project
    Response-Conflict:
      title: Response Conflict
      type: object
      allOf:
        - $ref: "#/components/schemas/Response-Problem"
        - type: object
          properties:
            status:
              example: 409
            title:
              example: Conflict
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409
    Response-DeletedEnquiry:
      type: object
      allOf:
        - type: object
          required:
            - is_deleted
          properties:
            is_deleted:
              type: boolean
              example: true
        - $ref: '#/components/schemas/DB-Enquiry'
    Response-CreateEnquiry:
      type: object
      required:
        - activityId
        - enquiryId
      properties:
        activityId:
          type: string
        enquiryId:
          type: string
    Response-DraftElectrificationProject:
      title: Response Draft Electrification Project
      type: object
      required:
        - activityId
        - housingProjectId
      properties:
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity Id
          example: D95F1DE6
    Response-DraftHousingProject:
      title: Response Draft Housing Project
      type: object
      required:
        - activityId
        - housingProjectId
      properties:
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
        activityId:
          type: string
          description: Activity Id
          example: D95F1DE6
    Response-Email:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              msgId:
                type: string
                description: UUID for email message
                format: uuid
                example: b76469a3-896c-4435-aa83-b8b87db6f701
              to:
                type: array
                items:
                  type: string
                  description: The To email addresses
        txId:
          type: string
          format: uuid
          example: b76469a3-896c-4435-aa83-b8b87db6f701
    Response-NoteHistory:
      title: Response Note History Details
      type: object
      allOf:
        - $ref: '#/components/schemas/DB-NoteHistory'
        - type: object
          properties:
            note:
              type: array
              items:
                $ref: "#/components/schemas/DB-Note"
    Response-Error:
      title: Response Error
      type: object
      allOf:
        - $ref: '#/components/schemas/Response-Problem'
        - type: object
          properties:
            status:
              example: 500
            title:
              example: Internal Server Error
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500
    Response-Forbidden:
      title: Response Forbidden
      type: object
      allOf:
        - $ref: '#/components/schemas/Response-Problem'
        - type: object
          properties:
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403
            title:
              example: Forbidden
            status:
              example: 403
            detail:
              example: User lacks permission to complete this action
    Response-NotFound:
      title: Response Not Found
      type: object
      allOf:
        - $ref: '#/components/schemas/Response-Problem'
        - type: object
          properties:
            status:
              example: 404
            title:
              example: Not Found
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404
    Response-Problem:
      title: Response Problem
      type: object
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          description: What type of problem, link to explanation of problem
        title:
          type: string
          description: Title of problem, generally the HTTP Status Code description
        status:
          type: string
          description: The HTTP Status code
        detail:
          type: string
          description: >-
            A short, human-readable explanation specific to this occurrence of
            the problem
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem
    Response-SearchUsers:
      title: Response for searching users
      type: array
      items:
        allOf:
          - $ref: '#/components/schemas/DB-User'
          - type: object
            properties:
              groups:
                type: array
                description: List of groups (associated roles) for a user
                items:
                  type: string
                example:
                  - NAVIGATOR
    Response-ElectrificationProjectCreate:
      title: Response for Create Electrification Project
      type: object
      required:
        - activityId
        - housingProjectId
      properties:
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
    Response-HousingProjectCreate:
      title: Response for Create Housing Project
      type: object
      required:
        - activityId
        - housingProjectId
      properties:
        activityId:
          type: string
          description: Activity ID
          example: D95F1DE6
        housingProjectId:
          type: string
          description: UUID for the housing project
          format: uuid
          example: d95f1de6-698b-4d9d-b938-487eb446ace8
    Response-HousingProjectPermitData:
      type: object
      properties:
        projectName:
          type: string
          description: Name of the Project
          example: New Project
        consentToFeedback:
          type: boolean
          description: Whether or not user consents to feedback requests
        firstName:
          type: string
          description: First name of the contact person related to housing project
          example: John
        lastName:
          type: string
          description: Last name of the contact person related to housing project
          example: Smith
        phoneNumber:
          type: string
          description: Phone number for contact related to housing project
          example: (123) 456-7890
        email:
          type: string
          format: email
          description: Email address for contact related to housing project
          example: john.smith@example.com
        contactPreference:
          type: string
          enum: [Phone call, Email, Either]
          description: Preferred method of contact related to housing project
          example: Email
        activityId:
          type: string
          description: Activity ID related to housing project and permit
          example: D95F1DE6
        locality:
          type: string
          description: City, town, etc. (Location) of project
          example: Maple Ridge
        streetAddress:
          type: string
          description: Street address of project
          example: 2975 Jutland Rd
        latitude:
          type: number
          description: Latitude Cordinate for project
          example: 48.440531
        longitude:
          type: number
          description: Longitude Cordinate for project
          example: -123.377677
        locationPids:
          type: string
          description: Location PIDs for the project
          example: 006-209-521, 007-209-522
        issuedPermitId:
          type: string
          description: ID of the issued permit
          example: '123'
        trackingId:
          type: string
          description: ID for tracking permit
          example: H7kidnhd948594
        authStatus:
          type: string
          description: Status of authentication for the permit
          example: Pending
        needed:
          type: string
          description: Whether permit is needed, or still uner investigation
          example: Under Investigation
        status:
          type: string
          description: Status of the permit
          example: New
        submittedDate:
          type: string
          description: Date the permit was submitted
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        adjudicationDate:
          type: string
          description: Date of the permit's adjudication
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        statusLastVerified:
          type: string
          description: Date of the last verified status of permit
          format: date-time
          example: '2024-08-14T07:00:00.000Z'
        acronym:
          type: string
          description: Acronym for permit type name
          example: SAP
        agency:
          type: string
          description: Government agency
          example: Water, Land and Resource Stewardship
        branch:
          type: string
          description: Government branch
          example: Archaeology
        division:
          type: string
          description: Government division
          example: Forest Resiliency and Archaeology
        name:
          type: string
          description: Name of permit type
          example: Site Alteration Permit
        sourceSystem:
          type: string
          description: Source of the system used for this permit type
          example: Archaeology Permit Tracking System
        sourceSystemAcronym:
          type: string
          description: Acronym for source system
          example: APTS
        trackedInAts:
          type: boolean
          description: Whether this permit type is tracked in ATS or not
          example: false
        type:
          type: string
          description: Type of permit type
          example: Alteration
    Response-ElectrificationSubmissionStatistics:
      type: object
      properties:
        total_submissions:
          type: number
          example: 112
    Response-HousingSubmissionStatistics:
      type: object
      properties:
        total_submissions:
          type: number
          example: 112
        total_submissions_between:
          type: number
          example: 0
        total_submissions_monthyear:
          type: number
          example: 0
        total_submissions_assignedto:
          type: number
          example: 0
        intake_submitted:
          type: number
          example: 80
        intake_assigned:
          type: number
          example: 6
        intake_completed:
          type: number
          example: 1
        state_new:
          type: number
          example: 112
        state_inprogress:
          type: number
          example: 0
        state_delayed:
          type: number
          example: 0
        state_completed:
          type: number
          example: 0
        waiting_on:
          type: number
          example: 0
        queue_1:
          type: number
          example: 7
        queue_2:
          type: number
          example: 4
        queue_3:
          type: number
          example: 50
        escalation:
          type: number
          example: 0
        general_enquiry:
          type: number
          example: 0
        guidance:
          type: number
          example: 50
        inapplicable:
          type: number
          example: 0
        status_request:
          type: number
          example: 0
    Response-Unauthorized:
      title: Response Unauthorized
      type: object
      allOf:
        - $ref: '#/components/schemas/Response-Problem'
        - type: object
          properties:
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
            title:
              example: Unauthorized
            status:
              example: 401
            detail:
              example: Invalid authorization credentials
    Response-ValidationError:
      title: Response Validation Error
      type: object
      allOf:
        - $ref: "#/components/schemas/Response-Problem"
        - type: object
          required:
            - errors
          properties:
            errors:
              type: array
              items:
                type: object
                required:
                  - message
                properties:
                  value:
                    type: object
                    description: Contents of the field that was in error.
                    example: {}
                  message:
                    type: string
                    description: The error message for the field.
                    example: Invalid value `encoding`.
            status:
              example: 422
            title:
              example: Unprocessable Entity
            type:
              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422
  responses:
    BadRequest:
      description: Bad Request (Request is missing content or malformed)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response-BadRequest'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response-Conflict'
    Error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response-Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response-Forbidden'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response-NotFound'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response-Unauthorized'
    UnprocessableEntity:
      description: Unprocessable Content (Generally validation error(s))
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Response-ValidationError"
  securitySchemes:
    BearerAuth:
      type: http
      description: Bearer token auth using an OIDC issued JWT token
      scheme: bearer
      bearerFormat: JWT
    OpenID:
      type: openIdConnect
      description: OpenID Connect endpoint for acquiring JWT tokens
      openIdConnectUrl: >-
        https://logonproxy.gov.bc.ca/auth/realms/your-realm-name/.well-known/openid-configuration
